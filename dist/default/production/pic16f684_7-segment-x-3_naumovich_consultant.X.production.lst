

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec  1 09:50:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F684
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F684 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0007                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0087                     	;# 
    97  008C                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0095                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0096                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0007                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0087                     	;# 
   145  008C                     	;# 
   146  008E                     	;# 
   147  008F                     	;# 
   148  0090                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0095                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0096                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0007                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0087                     	;# 
   193  008C                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0095                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0007                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0087                     	;# 
   241  008C                     	;# 
   242  008E                     	;# 
   243  008F                     	;# 
   244  0090                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0095                     	;# 
   248  0095                     	;# 
   249  0096                     	;# 
   250  0096                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009A                     	;# 
   254  009B                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259                           
   260                           	psect	idataBANK0
   261  00C4                     __pidataBANK0:	
   262                           
   263                           ;initializer for _already_messured
   264  00C4  3401               	retlw	1
   265                           
   266                           ;initializer for _messured_temp
   267  00C5  3444               	retlw	68
   268  001F                     _ADCON0	set	31
   269  001E                     _ADRESH	set	30
   270  0019                     _CMCON0	set	25
   271  002D                     _RA5	set	45
   272  002C                     _RA4	set	44
   273  0029                     _RA1	set	41
   274  0028                     _RA0	set	40
   275  003D                     _RC5	set	61
   276  003C                     _RC4	set	60
   277  003B                     _RC3	set	59
   278  003A                     _RC2	set	58
   279  0039                     _RC1	set	57
   280  0038                     _RC0	set	56
   281  00F9                     _GO_nDONE	set	249
   282  002B                     _RA3	set	43
   283  009F                     _ADCON1	set	159
   284  009E                     _ADRESL	set	158
   285  0087                     _TRISC	set	135
   286  0085                     _TRISA	set	133
   287  0091                     _ANSEL	set	145
   288                           
   289                           ; #config settings
   290  0000                     
   291                           	psect	cinit
   292  07F5                     start_initialization:	
   293  07F5                     __initialization:	
   294                           
   295                           ; Initialize objects allocated to BANK0
   296  07F5  20C4               	fcall	__pidataBANK0	;fetch initializer
   297  07F6  00D5               	movwf	__pdataBANK0& (0+127)
   298  07F7  20C5               	fcall	__pidataBANK0+1	;fetch initializer
   299  07F8  00D6               	movwf	(__pdataBANK0+1)& (0+127)
   300                           
   301                           ; Clear objects allocated to BANK0
   302  07F9  1383               	bcf	3,7	;select IRP bank0
   303  07FA  3049               	movlw	low __pbssBANK0
   304  07FB  0084               	movwf	4
   305  07FC  3055               	movlw	low (__pbssBANK0+12)
   306  07FD  20F1               	fcall	clear_ram0
   307  07FE                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310  07FE                     __end_of__initialization:	
   311  07FE  0183               	clrf	3
   312  07FF  2C7B               	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	bssBANK0
   315  0049                     __pbssBANK0:	
   316  0049                     _temp:	
   317  0049                     	ds	2
   318  004B                     _counter:	
   319  004B                     	ds	2
   320  004D                     _i:	
   321  004D                     	ds	2
   322  004F                     _u:	
   323  004F                     	ds	2
   324  0051                     _change_counter:	
   325  0051                     	ds	1
   326  0052                     _temp_going_up:	
   327  0052                     	ds	1
   328  0053                     _temp_index:	
   329  0053                     	ds	1
   330  0054                     _value:	
   331  0054                     	ds	1
   332                           
   333                           	psect	dataBANK0
   334  0055                     __pdataBANK0:	
   335  0055                     _already_messured:	
   336  0055                     	ds	1
   337  0056                     _messured_temp:	
   338  0056                     	ds	1
   339                           
   340                           	psect	clrtext
   341  00F1                     clear_ram0:	
   342                           ;	Called with FSR containing the base address, and
   343                           ;	W with the last address+1
   344                           
   345  00F1  0064               	clrwdt	;clear the watchdog before getting into this loop
   346  00F2                     clrloop0:	
   347  00F2  0180               	clrf	0	;clear RAM location pointed to by FSR
   348  00F3  0A84               	incf	4,f	;increment pointer
   349  00F4  0604               	xorwf	4,w	;XOR with final address
   350  00F5  1903               	btfsc	3,2	;have we reached the end yet?
   351  00F6  3400               	retlw	0	;all done for this memory range, return
   352  00F7  0604               	xorwf	4,w	;XOR again to restore value
   353  00F8  28F2               	goto	clrloop0	;do the next byte
   354                           
   355                           	psect	cstackCOMMON
   356  0070                     __pcstackCOMMON:	
   357  0070                     ?_ADC_Init:	
   358  0070                     ??_ADC_Init:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_init_LED:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_init_LED:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_draw_to:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_draw_hot:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_draw_temp:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_draw_minus:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_draw_add:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_draw_needed_amount:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_show_LED1:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_show_LED2:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_show_LED3:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_ADC_Start:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ??_ADC_Start:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_main:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_convert_to_segment:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_convert_to_segment:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?___awdiv:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?___xxtofl:	
   413                           ; 2 bytes @ 0x0
   414                           
   415  0070                     ___awdiv@divisor:	
   416                           ; 4 bytes @ 0x0
   417                           
   418  0070                     ___xxtofl@val:	
   419                           ; 2 bytes @ 0x0
   420                           
   421                           
   422                           ; 4 bytes @ 0x0
   423  0070                     	ds	2
   424  0072                     convert_to_segment@value:	
   425  0072                     ADC_Start@channel:	
   426                           ; 1 bytes @ 0x2
   427                           
   428  0072                     ___awdiv@dividend:	
   429                           ; 1 bytes @ 0x2
   430                           
   431                           
   432                           ; 2 bytes @ 0x2
   433  0072                     	ds	1
   434  0073                     ??_show_LED1:	
   435  0073                     ??_show_LED2:	
   436                           ; 1 bytes @ 0x3
   437                           
   438  0073                     ??_show_LED3:	
   439                           ; 1 bytes @ 0x3
   440                           
   441                           
   442                           ; 1 bytes @ 0x3
   443  0073                     	ds	1
   444  0074                     ??___awdiv:	
   445  0074                     ??___xxtofl:	
   446                           ; 1 bytes @ 0x4
   447                           
   448                           
   449                           ; 1 bytes @ 0x4
   450  0074                     	ds	1
   451  0075                     show_LED1@c:	
   452  0075                     show_LED2@c:	
   453                           ; 1 bytes @ 0x5
   454                           
   455  0075                     show_LED3@c:	
   456                           ; 1 bytes @ 0x5
   457                           
   458  0075                     ___awdiv@counter:	
   459                           ; 1 bytes @ 0x5
   460                           
   461                           
   462                           ; 1 bytes @ 0x5
   463  0075                     	ds	1
   464  0076                     ??_draw_to:	
   465  0076                     ??_draw_hot:	
   466                           ; 1 bytes @ 0x6
   467                           
   468  0076                     ??_draw_minus:	
   469                           ; 1 bytes @ 0x6
   470                           
   471  0076                     ??_draw_add:	
   472                           ; 1 bytes @ 0x6
   473                           
   474  0076                     ??_draw_needed_amount:	
   475                           ; 1 bytes @ 0x6
   476                           
   477  0076                     draw_needed_amount@i:	
   478                           ; 1 bytes @ 0x6
   479                           
   480  0076                     ___awdiv@sign:	
   481                           ; 1 bytes @ 0x6
   482                           
   483                           
   484                           ; 1 bytes @ 0x6
   485  0076                     	ds	1
   486  0077                     ___awdiv@quotient:	
   487                           
   488                           ; 2 bytes @ 0x7
   489  0077                     	ds	1
   490  0078                     ___xxtofl@sign:	
   491                           
   492                           ; 1 bytes @ 0x8
   493  0078                     	ds	1
   494  0079                     ?___bmul:	
   495  0079                     ?_get_temp_value:	
   496                           ; 1 bytes @ 0x9
   497                           
   498  0079                     ___bmul@multiplicand:	
   499                           ; 2 bytes @ 0x9
   500                           
   501  0079                     ___xxtofl@exp:	
   502                           ; 1 bytes @ 0x9
   503                           
   504                           
   505                           ; 1 bytes @ 0x9
   506  0079                     	ds	1
   507  007A                     ??___bmul:	
   508  007A                     ___xxtofl@arg:	
   509                           ; 1 bytes @ 0xA
   510                           
   511                           
   512                           ; 4 bytes @ 0xA
   513  007A                     	ds	1
   514  007B                     ??_get_temp_value:	
   515  007B                     ___bmul@product:	
   516                           ; 1 bytes @ 0xB
   517                           
   518                           
   519                           ; 1 bytes @ 0xB
   520  007B                     	ds	1
   521  007C                     ___bmul@multiplier:	
   522                           
   523                           ; 1 bytes @ 0xC
   524  007C                     	ds	2
   525                           
   526                           	psect	cstackBANK0
   527  0020                     __pcstackBANK0:	
   528  0020                     ??_draw_temp:	
   529  0020                     ?___fldiv:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0020                     get_temp_value@result:	
   533                           ; 4 bytes @ 0x0
   534                           
   535  0020                     ___fldiv@a:	
   536                           ; 2 bytes @ 0x0
   537                           
   538                           
   539                           ; 4 bytes @ 0x0
   540  0020                     	ds	2
   541  0022                     get_temp_value@i:	
   542                           
   543                           ; 2 bytes @ 0x2
   544  0022                     	ds	2
   545  0024                     draw_temp@i:	
   546  0024                     ___fldiv@b:	
   547                           ; 1 bytes @ 0x4
   548                           
   549                           
   550                           ; 4 bytes @ 0x4
   551  0024                     	ds	1
   552  0025                     draw_temp@d:	
   553                           
   554                           ; 1 bytes @ 0x5
   555  0025                     	ds	3
   556  0028                     ??___fldiv:	
   557                           
   558                           ; 1 bytes @ 0x8
   559  0028                     	ds	5
   560  002D                     ___fldiv@rem:	
   561                           
   562                           ; 4 bytes @ 0xD
   563  002D                     	ds	4
   564  0031                     ___fldiv@sign:	
   565                           
   566                           ; 1 bytes @ 0x11
   567  0031                     	ds	1
   568  0032                     ___fldiv@new_exp:	
   569                           
   570                           ; 2 bytes @ 0x12
   571  0032                     	ds	2
   572  0034                     ___fldiv@grs:	
   573                           
   574                           ; 4 bytes @ 0x14
   575  0034                     	ds	4
   576  0038                     ___fldiv@bexp:	
   577                           
   578                           ; 1 bytes @ 0x18
   579  0038                     	ds	1
   580  0039                     ___fldiv@aexp:	
   581                           
   582                           ; 1 bytes @ 0x19
   583  0039                     	ds	1
   584  003A                     ?___fltol:	
   585  003A                     ___fltol@f1:	
   586                           ; 4 bytes @ 0x1A
   587                           
   588                           
   589                           ; 4 bytes @ 0x1A
   590  003A                     	ds	4
   591  003E                     ??___fltol:	
   592                           
   593                           ; 1 bytes @ 0x1E
   594  003E                     	ds	5
   595  0043                     ___fltol@sign1:	
   596                           
   597                           ; 1 bytes @ 0x23
   598  0043                     	ds	1
   599  0044                     ___fltol@exp1:	
   600                           
   601                           ; 1 bytes @ 0x24
   602  0044                     	ds	1
   603  0045                     ??_main:	
   604                           
   605                           ; 1 bytes @ 0x25
   606  0045                     	ds	3
   607  0048                     main@i:	
   608                           
   609                           ; 1 bytes @ 0x28
   610  0048                     	ds	1
   611                           
   612                           	psect	maintext
   613  047B                     __pmaintext:	
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 59 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  i               1   40[BANK0 ] unsigned char 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : B00/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1
   633 ;;      Params:         0       0       0
   634 ;;      Locals:         0       1       0
   635 ;;      Temps:          0       3       0
   636 ;;      Totals:         0       4       0
   637 ;;Total ram usage:        4 bytes
   638 ;; Hardware stack levels required when called:    3
   639 ;; This function calls:
   640 ;;		_ADC_Init
   641 ;;		_ADC_Start
   642 ;;		___fldiv
   643 ;;		___fltol
   644 ;;		___xxtofl
   645 ;;		_draw_add
   646 ;;		_draw_hot
   647 ;;		_draw_minus
   648 ;;		_draw_needed_amount
   649 ;;		_draw_temp
   650 ;;		_draw_to
   651 ;;		_get_temp_value
   652 ;;		_init_LED
   653 ;;		_show_LED1
   654 ;;		_show_LED2
   655 ;;		_show_LED3
   656 ;; This function is called by:
   657 ;;		Startup code after reset
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function _main
   663  047B                     _main:	
   664  047B                     l1784:	
   665                           ;incstack = 0
   666                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   667                           
   668                           
   669                           ;main.c: 61:     ANSEL = 0b00000100;
   670  047B  3004               	movlw	4
   671  047C  1683               	bsf	3,5	;RP0=1, select bank1
   672  047D  0091               	movwf	17	;volatile
   673                           
   674                           ;main.c: 62:     CMCON0 = 0x07;
   675  047E  3007               	movlw	7
   676  047F  1283               	bcf	3,5	;RP0=0, select bank0
   677  0480  0099               	movwf	25	;volatile
   678                           
   679                           ;main.c: 64:     TRISA = 0b00001100;
   680  0481  300C               	movlw	12
   681  0482  1683               	bsf	3,5	;RP0=1, select bank1
   682  0483  0085               	movwf	5	;volatile
   683  0484                     l1786:	
   684                           
   685                           ;main.c: 65:     TRISC = 0b00000000;
   686  0484  0187               	clrf	7	;volatile
   687  0485                     l1788:	
   688                           
   689                           ;main.c: 67:     ADC_Init();
   690  0485  20C6               	fcall	_ADC_Init
   691  0486                     l1790:	
   692                           
   693                           ;main.c: 69:     init_LED();
   694  0486  2141               	fcall	_init_LED
   695  0487                     l1792:	
   696                           
   697                           ;main.c: 72:     for (char i=0; i<2; i++) {
   698  0487  1283               	bcf	3,5	;RP0=0, select bank0
   699  0488  01C8               	clrf	main@i
   700  0489                     l1796:	
   701                           
   702                           ;main.c: 73:         temp[i] = 68 + 5;
   703  0489  3049               	movlw	73
   704  048A  00C5               	movwf	??_main
   705  048B  0848               	movf	main@i,w
   706  048C  3E49               	addlw	(low (_temp| 0))& (0+255)
   707  048D  0084               	movwf	4
   708  048E  0845               	movf	??_main,w
   709  048F  1383               	bcf	3,7	;select IRP bank0
   710  0490  0080               	movwf	0
   711  0491                     l1798:	
   712                           
   713                           ;main.c: 74:     };
   714  0491  3001               	movlw	1
   715  0492  00C5               	movwf	??_main
   716  0493  0845               	movf	??_main,w
   717  0494  07C8               	addwf	main@i,f
   718  0495                     l1800:	
   719  0495  3002               	movlw	2
   720  0496  0248               	subwf	main@i,w
   721  0497  1C03               	skipc
   722  0498  2C9A               	goto	u1711
   723  0499  2C9B               	goto	u1710
   724  049A                     u1711:	
   725  049A  2C89               	goto	l1796
   726  049B                     u1710:	
   727  049B                     l1802:	
   728                           
   729                           ;main.c: 80:         if (value > 82) {
   730  049B  3053               	movlw	83
   731  049C  1283               	bcf	3,5	;RP0=0, select bank0
   732  049D  0254               	subwf	_value,w
   733  049E  1C03               	skipc
   734  049F  2CA1               	goto	u1721
   735  04A0  2CA2               	goto	u1720
   736  04A1                     u1721:	
   737  04A1  2CC5               	goto	l1814
   738  04A2                     u1720:	
   739  04A2                     l1804:	
   740                           
   741                           ;main.c: 81:             if (counter<(250/3)) {
   742  04A2  084C               	movf	_counter+1,w
   743  04A3  3A80               	xorlw	128
   744  04A4  00FF               	movwf	btemp+1
   745  04A5  3080               	movlw	128
   746  04A6  027F               	subwf	btemp+1,w
   747  04A7  1D03               	skipz
   748  04A8  2CAB               	goto	u1735
   749  04A9  3053               	movlw	83
   750  04AA  024B               	subwf	_counter,w
   751  04AB                     u1735:	
   752  04AB  1803               	skipnc
   753  04AC  2CAE               	goto	u1731
   754  04AD  2CAF               	goto	u1730
   755  04AE                     u1731:	
   756  04AE  2CB1               	goto	l1808
   757  04AF                     u1730:	
   758  04AF                     l1806:	
   759                           
   760                           ;main.c: 82:                draw_to();
   761  04AF  20E2               	fcall	_draw_to
   762                           
   763                           ;main.c: 84:             } else if (counter<(250/3*2)) {
   764  04B0  2D58               	goto	l1870
   765  04B1                     l1808:	
   766  04B1  1283               	bcf	3,5	;RP0=0, select bank0
   767  04B2  084C               	movf	_counter+1,w
   768  04B3  3A80               	xorlw	128
   769  04B4  00FF               	movwf	btemp+1
   770  04B5  3080               	movlw	128
   771  04B6  027F               	subwf	btemp+1,w
   772  04B7  1D03               	skipz
   773  04B8  2CBB               	goto	u1745
   774  04B9  30A6               	movlw	166
   775  04BA  024B               	subwf	_counter,w
   776  04BB                     u1745:	
   777  04BB  1803               	skipnc
   778  04BC  2CBE               	goto	u1741
   779  04BD  2CBF               	goto	u1740
   780  04BE                     u1741:	
   781  04BE  2CC1               	goto	l1812
   782  04BF                     u1740:	
   783  04BF                     l1810:	
   784                           
   785                           ;main.c: 85:                draw_hot();
   786  04BF  20D4               	fcall	_draw_hot
   787                           
   788                           ;main.c: 87:             } else {
   789  04C0  2D58               	goto	l1870
   790  04C1                     l1812:	
   791                           
   792                           ;main.c: 88:                draw_temp(messured_temp);
   793  04C1  1283               	bcf	3,5	;RP0=0, select bank0
   794  04C2  0856               	movf	_messured_temp,w
   795  04C3  21B7               	fcall	_draw_temp
   796  04C4  2D58               	goto	l1870
   797  04C5                     l1814:	
   798  04C5  3025               	movlw	37
   799  04C6  0254               	subwf	_value,w
   800  04C7  1C03               	skipc
   801  04C8  2CCA               	goto	u1751
   802  04C9  2CCB               	goto	u1750
   803  04CA                     u1751:	
   804  04CA  2D38               	goto	l1860
   805  04CB                     u1750:	
   806  04CB                     l1816:	
   807                           
   808                           ;main.c: 91:             if (temp_going_up==1) {
   809  04CB  0352               	decf	_temp_going_up,w
   810  04CC  1D03               	btfss	3,2
   811  04CD  2CCF               	goto	u1761
   812  04CE  2CD0               	goto	u1760
   813  04CF                     u1761:	
   814  04CF  2CD9               	goto	l1824
   815  04D0                     u1760:	
   816  04D0                     l1818:	
   817                           
   818                           ;main.c: 92:                 if (RA3==1) {
   819  04D0  1D85               	btfss	5,3	;volatile
   820  04D1  2CD3               	goto	u1771
   821  04D2  2CD4               	goto	u1770
   822  04D3                     u1771:	
   823  04D3  2CD7               	goto	l1822
   824  04D4                     u1770:	
   825  04D4                     l1820:	
   826                           
   827                           ;main.c: 93:                     draw_temp(messured_temp);
   828  04D4  0856               	movf	_messured_temp,w
   829  04D5  21B7               	fcall	_draw_temp
   830                           
   831                           ;main.c: 94:                 } else {
   832  04D6  2D58               	goto	l1870
   833  04D7                     l1822:	
   834                           
   835                           ;main.c: 95:                     draw_minus();
   836  04D7  20DB               	fcall	_draw_minus
   837  04D8  2D58               	goto	l1870
   838  04D9                     l1824:	
   839                           
   840                           ;main.c: 98:                 if (counter<(250/3)) {
   841  04D9  084C               	movf	_counter+1,w
   842  04DA  3A80               	xorlw	128
   843  04DB  00FF               	movwf	btemp+1
   844  04DC  3080               	movlw	128
   845  04DD  027F               	subwf	btemp+1,w
   846  04DE  1D03               	skipz
   847  04DF  2CE2               	goto	u1785
   848  04E0  3053               	movlw	83
   849  04E1  024B               	subwf	_counter,w
   850  04E2                     u1785:	
   851  04E2  1803               	skipnc
   852  04E3  2CE5               	goto	u1781
   853  04E4  2CE6               	goto	u1780
   854  04E5                     u1781:	
   855  04E5  2CF7               	goto	l1834
   856  04E6                     u1780:	
   857  04E6                     l1826:	
   858                           
   859                           ;main.c: 99:                     if (value < 68) {
   860  04E6  3044               	movlw	68
   861  04E7  1283               	bcf	3,5	;RP0=0, select bank0
   862  04E8  0254               	subwf	_value,w
   863  04E9  1803               	skipnc
   864  04EA  2CEC               	goto	u1791
   865  04EB  2CED               	goto	u1790
   866  04EC                     u1791:	
   867  04EC  2CF0               	goto	l85
   868  04ED                     u1790:	
   869  04ED                     l1828:	
   870                           
   871                           ;main.c: 100:                         draw_temp(messured_temp);
   872  04ED  0856               	movf	_messured_temp,w
   873  04EE  21B7               	fcall	_draw_temp
   874                           
   875                           ;main.c: 102:                     } else {
   876  04EF  2D58               	goto	l1870
   877  04F0                     l85:	
   878                           
   879                           ;main.c: 103:                         if (RA3==1) {
   880  04F0  1D85               	btfss	5,3	;volatile
   881  04F1  2CF3               	goto	u1801
   882  04F2  2CF4               	goto	u1800
   883  04F3                     u1801:	
   884  04F3  2CD7               	goto	l1822
   885  04F4                     u1800:	
   886  04F4                     l1830:	
   887                           
   888                           ;main.c: 104:                             draw_temp(messured_temp);
   889  04F4  0856               	movf	_messured_temp,w
   890  04F5  21B7               	fcall	_draw_temp
   891                           
   892                           ;main.c: 105:                         } else {
   893  04F6  2D58               	goto	l1870
   894  04F7                     l1834:	
   895  04F7  1283               	bcf	3,5	;RP0=0, select bank0
   896  04F8  084C               	movf	_counter+1,w
   897  04F9  3A80               	xorlw	128
   898  04FA  00FF               	movwf	btemp+1
   899  04FB  3080               	movlw	128
   900  04FC  027F               	subwf	btemp+1,w
   901  04FD  1D03               	skipz
   902  04FE  2D01               	goto	u1815
   903  04FF  30A6               	movlw	166
   904  0500  024B               	subwf	_counter,w
   905  0501                     u1815:	
   906  0501  1803               	skipnc
   907  0502  2D04               	goto	u1811
   908  0503  2D05               	goto	u1810
   909  0504                     u1811:	
   910  0504  2D15               	goto	l1844
   911  0505                     u1810:	
   912  0505                     l1836:	
   913                           
   914                           ;main.c: 110:                     if (value < 68){
   915  0505  3044               	movlw	68
   916  0506  1283               	bcf	3,5	;RP0=0, select bank0
   917  0507  0254               	subwf	_value,w
   918  0508  1803               	skipnc
   919  0509  2D0B               	goto	u1821
   920  050A  2D0C               	goto	u1820
   921  050B                     u1821:	
   922  050B  2D0E               	goto	l91
   923  050C                     u1820:	
   924  050C                     l1838:	
   925                           
   926                           ;main.c: 111:                         draw_add();
   927  050C  20CD               	fcall	_draw_add
   928                           
   929                           ;main.c: 112:                     } else {
   930  050D  2D58               	goto	l1870
   931  050E                     l91:	
   932                           
   933                           ;main.c: 113:                         if (RA3==1) {
   934  050E  1D85               	btfss	5,3	;volatile
   935  050F  2D11               	goto	u1831
   936  0510  2D12               	goto	u1830
   937  0511                     u1831:	
   938  0511  2CD7               	goto	l1822
   939  0512                     u1830:	
   940  0512                     l1840:	
   941                           
   942                           ;main.c: 114:                             draw_temp(messured_temp);
   943  0512  0856               	movf	_messured_temp,w
   944  0513  21B7               	fcall	_draw_temp
   945                           
   946                           ;main.c: 115:                         } else {
   947  0514  2D58               	goto	l1870
   948  0515                     l1844:	
   949                           
   950                           ;main.c: 120:                     if (value < 55) {
   951  0515  3037               	movlw	55
   952  0516  1283               	bcf	3,5	;RP0=0, select bank0
   953  0517  0254               	subwf	_value,w
   954  0518  1803               	skipnc
   955  0519  2D1B               	goto	u1841
   956  051A  2D1C               	goto	u1840
   957  051B                     u1841:	
   958  051B  2D1F               	goto	l1848
   959  051C                     u1840:	
   960  051C                     l1846:	
   961                           
   962                           ;main.c: 121:                         draw_needed_amount(3);
   963  051C  3003               	movlw	3
   964  051D  20E9               	fcall	_draw_needed_amount
   965                           
   966                           ;main.c: 122:                     } else if (value < 64 ) {
   967  051E  2D58               	goto	l1870
   968  051F                     l1848:	
   969  051F  3040               	movlw	64
   970  0520  0254               	subwf	_value,w
   971  0521  1803               	skipnc
   972  0522  2D24               	goto	u1851
   973  0523  2D25               	goto	u1850
   974  0524                     u1851:	
   975  0524  2D28               	goto	l1852
   976  0525                     u1850:	
   977  0525                     l1850:	
   978                           
   979                           ;main.c: 123:                         draw_needed_amount(2);
   980  0525  3002               	movlw	2
   981  0526  20E9               	fcall	_draw_needed_amount
   982                           
   983                           ;main.c: 124:                     } else if (value < 68 ) {
   984  0527  2D58               	goto	l1870
   985  0528                     l1852:	
   986  0528  3044               	movlw	68
   987  0529  0254               	subwf	_value,w
   988  052A  1803               	skipnc
   989  052B  2D2D               	goto	u1861
   990  052C  2D2E               	goto	u1860
   991  052D                     u1861:	
   992  052D  2D31               	goto	l100
   993  052E                     u1860:	
   994  052E                     l1854:	
   995                           
   996                           ;main.c: 125:                         draw_needed_amount(1);
   997  052E  3001               	movlw	1
   998  052F  20E9               	fcall	_draw_needed_amount
   999                           
  1000                           ;main.c: 126:                     } else {
  1001  0530  2D58               	goto	l1870
  1002  0531                     l100:	
  1003                           
  1004                           ;main.c: 127:                         if (RA3==1) {
  1005  0531  1D85               	btfss	5,3	;volatile
  1006  0532  2D34               	goto	u1871
  1007  0533  2D35               	goto	u1870
  1008  0534                     u1871:	
  1009  0534  2CD7               	goto	l1822
  1010  0535                     u1870:	
  1011  0535                     l1856:	
  1012                           
  1013                           ;main.c: 128:                             draw_temp(messured_temp);
  1014  0535  0856               	movf	_messured_temp,w
  1015  0536  21B7               	fcall	_draw_temp
  1016                           
  1017                           ;main.c: 129:                         } else {
  1018  0537  2D58               	goto	l1870
  1019  0538                     l1860:	
  1020  0538  300A               	movlw	10
  1021  0539  0254               	subwf	_value,w
  1022  053A  1803               	skipnc
  1023  053B  2D3D               	goto	u1881
  1024  053C  2D3E               	goto	u1880
  1025  053D                     u1881:	
  1026  053D  2D56               	goto	l1868
  1027  053E                     u1880:	
  1028  053E                     l1862:	
  1029                           
  1030                           ;main.c: 136:             if (counter<(250/2)) {
  1031  053E  084C               	movf	_counter+1,w
  1032  053F  3A80               	xorlw	128
  1033  0540  00FF               	movwf	btemp+1
  1034  0541  3080               	movlw	128
  1035  0542  027F               	subwf	btemp+1,w
  1036  0543  1D03               	skipz
  1037  0544  2D47               	goto	u1895
  1038  0545  307D               	movlw	125
  1039  0546  024B               	subwf	_counter,w
  1040  0547                     u1895:	
  1041  0547  1803               	skipnc
  1042  0548  2D4A               	goto	u1891
  1043  0549  2D4B               	goto	u1890
  1044  054A                     u1891:	
  1045  054A  2D52               	goto	l1866
  1046  054B                     u1890:	
  1047  054B                     l1864:	
  1048                           
  1049                           ;main.c: 137:                 show_LED1(18);
  1050  054B  3012               	movlw	18
  1051  054C  20F9               	fcall	_show_LED1
  1052                           
  1053                           ;main.c: 138:                 show_LED2(18);
  1054  054D  3012               	movlw	18
  1055  054E  210A               	fcall	_show_LED2
  1056                           
  1057                           ;main.c: 139:                 show_LED3(18);
  1058  054F  3012               	movlw	18
  1059  0550  211B               	fcall	_show_LED3
  1060                           
  1061                           ;main.c: 140:             } else {
  1062  0551  2D58               	goto	l1870
  1063  0552                     l1866:	
  1064                           
  1065                           ;main.c: 141:                 draw_temp(messured_temp);
  1066  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0553  0856               	movf	_messured_temp,w
  1068  0554  21B7               	fcall	_draw_temp
  1069  0555  2D58               	goto	l1870
  1070  0556                     l1868:	
  1071                           
  1072                           ;main.c: 144:             draw_temp(messured_temp);
  1073  0556  0856               	movf	_messured_temp,w
  1074  0557  21B7               	fcall	_draw_temp
  1075  0558                     l1870:	
  1076                           
  1077                           ;main.c: 146:         counter = (counter>250) ? 0:(counter + 1);
  1078  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0559  084C               	movf	_counter+1,w
  1080  055A  3A80               	xorlw	128
  1081  055B  00FF               	movwf	btemp+1
  1082  055C  3080               	movlw	128
  1083  055D  027F               	subwf	btemp+1,w
  1084  055E  1D03               	skipz
  1085  055F  2D62               	goto	u1905
  1086  0560  30FB               	movlw	251
  1087  0561  024B               	subwf	_counter,w
  1088  0562                     u1905:	
  1089  0562  1803               	skipnc
  1090  0563  2D65               	goto	u1901
  1091  0564  2D66               	goto	u1900
  1092  0565                     u1901:	
  1093  0565  2D70               	goto	l1874
  1094  0566                     u1900:	
  1095  0566                     l1872:	
  1096  0566  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0567  084B               	movf	_counter,w
  1098  0568  3E01               	addlw	1
  1099  0569  00CB               	movwf	_counter
  1100  056A  084C               	movf	_counter+1,w
  1101  056B  1803               	skipnc
  1102  056C  3E01               	addlw	1
  1103  056D  3E00               	addlw	0
  1104  056E  00CC               	movwf	_counter+1
  1105  056F  2D73               	goto	l1876
  1106  0570                     l1874:	
  1107  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0571  01CB               	clrf	_counter
  1109  0572  01CC               	clrf	_counter+1
  1110  0573                     l1876:	
  1111                           
  1112                           ;main.c: 150:         if ( i==0 && already_messured==1 ) {
  1113  0573  084D               	movf	_i,w
  1114  0574  044E               	iorwf	_i+1,w
  1115  0575  1D03               	btfss	3,2
  1116  0576  2D78               	goto	u1911
  1117  0577  2D79               	goto	u1910
  1118  0578                     u1911:	
  1119  0578  2D88               	goto	l1886
  1120  0579                     u1910:	
  1121  0579                     l1878:	
  1122  0579  0355               	decf	_already_messured,w
  1123  057A  1D03               	btfss	3,2
  1124  057B  2D7D               	goto	u1921
  1125  057C  2D7E               	goto	u1920
  1126  057D                     u1921:	
  1127  057D  2D88               	goto	l1886
  1128  057E                     u1920:	
  1129  057E                     l1880:	
  1130                           
  1131                           ;main.c: 151:             ADC_Start(2);
  1132  057E  3002               	movlw	2
  1133  057F  215E               	fcall	_ADC_Start
  1134  0580                     l1882:	
  1135                           
  1136                           ;main.c: 152:             already_messured = 0;
  1137  0580  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0581  01D5               	clrf	_already_messured
  1139  0582                     l1884:	
  1140                           
  1141                           ;main.c: 153:             value = (char)get_temp_value();
  1142  0582  2182               	fcall	_get_temp_value
  1143  0583  0879               	movf	?_get_temp_value,w
  1144  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0585  00C5               	movwf	??_main
  1146  0586  0845               	movf	??_main,w
  1147  0587  00D4               	movwf	_value
  1148  0588                     l1886:	
  1149                           
  1150                           ;main.c: 156:         if (GO_nDONE) {
  1151  0588  1C9F               	btfss	31,1	;volatile
  1152  0589  2D8B               	goto	u1931
  1153  058A  2D8C               	goto	u1930
  1154  058B                     u1931:	
  1155  058B  2D8D               	goto	l1890
  1156  058C                     u1930:	
  1157  058C  2E05               	goto	l1930
  1158  058D                     l1890:	
  1159                           
  1160                           ;main.c: 159:             if (already_messured == 0) {
  1161  058D  0855               	movf	_already_messured,w
  1162  058E  1D03               	btfss	3,2
  1163  058F  2D91               	goto	u1941
  1164  0590  2D92               	goto	u1940
  1165  0591                     u1941:	
  1166  0591  2E05               	goto	l1930
  1167  0592                     u1940:	
  1168  0592                     l1892:	
  1169                           
  1170                           ;main.c: 161:                 messured_temp = (char)(((ADRESH << 8) + ADRESL)/2.048);
  1171  0592  081E               	movf	30,w	;volatile
  1172  0593  00C5               	movwf	??_main
  1173  0594  01C6               	clrf	??_main+1
  1174  0595  0845               	movf	??_main,w
  1175  0596  00C6               	movwf	??_main+1
  1176  0597  01C5               	clrf	??_main
  1177  0598  1683               	bsf	3,5	;RP0=1, select bank1
  1178  0599  081E               	movf	30,w	;volatile
  1179  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1180  059B  0745               	addwf	??_main,w
  1181  059C  00F0               	movwf	___xxtofl@val
  1182  059D  3000               	movlw	0
  1183  059E  1803               	skipnc
  1184  059F  3001               	movlw	1
  1185  05A0  0746               	addwf	??_main+1,w
  1186  05A1  00F1               	movwf	___xxtofl@val+1
  1187  05A2  01F2               	clrf	___xxtofl@val+2
  1188  05A3  1BF1               	btfsc	___xxtofl@val+1,7
  1189  05A4  03F2               	decf	___xxtofl@val+2,f
  1190  05A5  0872               	movf	___xxtofl@val+2,w
  1191  05A6  00F3               	movwf	___xxtofl@val+3
  1192  05A7  3001               	movlw	1
  1193  05A8  22D3               	fcall	___xxtofl
  1194  05A9  0873               	movf	?___xxtofl+3,w
  1195  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1196  05AB  00A7               	movwf	___fldiv@b+3
  1197  05AC  0872               	movf	?___xxtofl+2,w
  1198  05AD  00A6               	movwf	___fldiv@b+2
  1199  05AE  0871               	movf	?___xxtofl+1,w
  1200  05AF  00A5               	movwf	___fldiv@b+1
  1201  05B0  0870               	movf	?___xxtofl,w
  1202  05B1  00A4               	movwf	___fldiv@b
  1203  05B2  3040               	movlw	64
  1204  05B3  00A3               	movwf	___fldiv@a+3
  1205  05B4  3003               	movlw	3
  1206  05B5  00A2               	movwf	___fldiv@a+2
  1207  05B6  3012               	movlw	18
  1208  05B7  00A1               	movwf	___fldiv@a+1
  1209  05B8  306F               	movlw	111
  1210  05B9  00A0               	movwf	___fldiv@a
  1211  05BA  261D               	fcall	___fldiv
  1212  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1213  05BC  0823               	movf	?___fldiv+3,w
  1214  05BD  00BD               	movwf	___fltol@f1+3
  1215  05BE  0822               	movf	?___fldiv+2,w
  1216  05BF  00BC               	movwf	___fltol@f1+2
  1217  05C0  0821               	movf	?___fldiv+1,w
  1218  05C1  00BB               	movwf	___fltol@f1+1
  1219  05C2  0820               	movf	?___fldiv,w
  1220  05C3  00BA               	movwf	___fltol@f1
  1221  05C4  2258               	fcall	___fltol
  1222  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1223  05C6  083A               	movf	?___fltol,w
  1224  05C7  00C7               	movwf	??_main+2
  1225  05C8  0847               	movf	??_main+2,w
  1226  05C9  00D6               	movwf	_messured_temp
  1227  05CA                     l1894:	
  1228                           
  1229                           ;main.c: 163:                 if (messured_temp > value) {
  1230  05CA  0856               	movf	_messured_temp,w
  1231  05CB  0254               	subwf	_value,w
  1232  05CC  1803               	skipnc
  1233  05CD  2DCF               	goto	u1951
  1234  05CE  2DD0               	goto	u1950
  1235  05CF                     u1951:	
  1236  05CF  2DEA               	goto	l1908
  1237  05D0                     u1950:	
  1238  05D0                     l1896:	
  1239                           
  1240                           ;main.c: 164:                     change_counter++;
  1241  05D0  3001               	movlw	1
  1242  05D1  00C5               	movwf	??_main
  1243  05D2  0845               	movf	??_main,w
  1244  05D3  07D1               	addwf	_change_counter,f
  1245  05D4                     l1898:	
  1246                           
  1247                           ;main.c: 165:                     if(change_counter > 3) {
  1248  05D4  3004               	movlw	4
  1249  05D5  0251               	subwf	_change_counter,w
  1250  05D6  1C03               	skipc
  1251  05D7  2DD9               	goto	u1961
  1252  05D8  2DDA               	goto	u1960
  1253  05D9                     u1961:	
  1254  05D9  2DFC               	goto	l1924
  1255  05DA                     u1960:	
  1256  05DA                     l1900:	
  1257                           
  1258                           ;main.c: 166:                         temp_going_up = 1;
  1259  05DA  01D2               	clrf	_temp_going_up
  1260  05DB  0AD2               	incf	_temp_going_up,f
  1261  05DC                     l1902:	
  1262                           
  1263                           ;main.c: 167:                         temp[temp_index] = messured_temp;
  1264  05DC  0856               	movf	_messured_temp,w
  1265  05DD  00C5               	movwf	??_main
  1266  05DE  0853               	movf	_temp_index,w
  1267  05DF  3E49               	addlw	(low (_temp| 0))& (0+255)
  1268  05E0  0084               	movwf	4
  1269  05E1  0845               	movf	??_main,w
  1270  05E2  1383               	bcf	3,7	;select IRP bank0
  1271  05E3  0080               	movwf	0
  1272  05E4                     l1904:	
  1273                           
  1274                           ;main.c: 168:                         temp_index++;
  1275  05E4  3001               	movlw	1
  1276  05E5  00C5               	movwf	??_main
  1277  05E6  0845               	movf	??_main,w
  1278  05E7  07D3               	addwf	_temp_index,f
  1279  05E8                     l1906:	
  1280                           
  1281                           ;main.c: 169:                         change_counter=0;
  1282  05E8  01D1               	clrf	_change_counter
  1283  05E9  2DFC               	goto	l1924
  1284  05EA                     l1908:	
  1285  05EA  0854               	movf	_value,w
  1286  05EB  0256               	subwf	_messured_temp,w
  1287  05EC  1803               	skipnc
  1288  05ED  2DEF               	goto	u1971
  1289  05EE  2DF0               	goto	u1970
  1290  05EF                     u1971:	
  1291  05EF  2DE8               	goto	l1906
  1292  05F0                     u1970:	
  1293  05F0                     l1910:	
  1294                           
  1295                           ;main.c: 172:                     change_counter++;
  1296  05F0  3001               	movlw	1
  1297  05F1  00C5               	movwf	??_main
  1298  05F2  0845               	movf	??_main,w
  1299  05F3  07D1               	addwf	_change_counter,f
  1300  05F4                     l1912:	
  1301                           
  1302                           ;main.c: 173:                     if(change_counter > 3) {
  1303  05F4  3004               	movlw	4
  1304  05F5  0251               	subwf	_change_counter,w
  1305  05F6  1C03               	skipc
  1306  05F7  2DF9               	goto	u1981
  1307  05F8  2DFA               	goto	u1980
  1308  05F9                     u1981:	
  1309  05F9  2DFC               	goto	l1924
  1310  05FA                     u1980:	
  1311  05FA                     l1914:	
  1312                           
  1313                           ;main.c: 174:                         temp_going_up = 0;
  1314  05FA  01D2               	clrf	_temp_going_up
  1315  05FB  2DDC               	goto	l1902
  1316  05FC                     l1924:	
  1317                           
  1318                           ;main.c: 182:                 if (temp_index == 2) temp_index=0;
  1319  05FC  3002               	movlw	2
  1320  05FD  0653               	xorwf	_temp_index,w
  1321  05FE  1D03               	btfss	3,2
  1322  05FF  2E01               	goto	u1991
  1323  0600  2E02               	goto	u1990
  1324  0601                     u1991:	
  1325  0601  2E03               	goto	l1928
  1326  0602                     u1990:	
  1327  0602                     l1926:	
  1328  0602  01D3               	clrf	_temp_index
  1329  0603                     l1928:	
  1330                           
  1331                           ;main.c: 184:                 already_messured=1;
  1332  0603  01D5               	clrf	_already_messured
  1333  0604  0AD5               	incf	_already_messured,f
  1334  0605                     l1930:	
  1335                           
  1336                           ;main.c: 187:         i++;
  1337  0605  3001               	movlw	1
  1338  0606  07CD               	addwf	_i,f
  1339  0607  1803               	skipnc
  1340  0608  0ACE               	incf	_i+1,f
  1341  0609  3000               	movlw	0
  1342  060A  07CE               	addwf	_i+1,f
  1343  060B                     l1932:	
  1344                           
  1345                           ;main.c: 190:         if ( i> 250 ) {
  1346  060B  084E               	movf	_i+1,w
  1347  060C  3A80               	xorlw	128
  1348  060D  00FF               	movwf	btemp+1
  1349  060E  3080               	movlw	128
  1350  060F  027F               	subwf	btemp+1,w
  1351  0610  1D03               	skipz
  1352  0611  2E14               	goto	u2005
  1353  0612  30FB               	movlw	251
  1354  0613  024D               	subwf	_i,w
  1355  0614                     u2005:	
  1356  0614  1C03               	skipc
  1357  0615  2E17               	goto	u2001
  1358  0616  2E18               	goto	u2000
  1359  0617                     u2001:	
  1360  0617  2C9B               	goto	l1802
  1361  0618                     u2000:	
  1362  0618                     l1934:	
  1363                           
  1364                           ;main.c: 191:             i=0;
  1365  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0619  01CD               	clrf	_i
  1367  061A  01CE               	clrf	_i+1
  1368  061B  2C9B               	goto	l1802
  1369  061C  2800               	ljmp	start
  1370  061D                     __end_of_main:	
  1371                           
  1372                           	psect	text1
  1373  0141                     __ptext1:	
  1374 ;; *************** function _init_LED *****************
  1375 ;; Defined at:
  1376 ;;		line 263 in file "7-segment-x-3.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMMON   BANK0   BANK1
  1390 ;;      Params:         0       0       0
  1391 ;;      Locals:         0       0       0
  1392 ;;      Temps:          3       0       0
  1393 ;;      Totals:         3       0       0
  1394 ;;Total ram usage:        3 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _init_LED
  1405  0141                     _init_LED:	
  1406  0141                     l1516:	
  1407                           ;incstack = 0
  1408                           ; Regs used in _init_LED: [wreg]
  1409                           
  1410  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0142  1407               	bsf	7,0	;volatile
  1412  0143  1487               	bsf	7,1	;volatile
  1413  0144  1507               	bsf	7,2	;volatile
  1414  0145  1587               	bsf	7,3	;volatile
  1415  0146  1607               	bsf	7,4	;volatile
  1416  0147  1687               	bsf	7,5	;volatile
  1417  0148  1405               	bsf	5,0	;volatile
  1418  0149  1085               	bcf	5,1	;volatile
  1419  014A  1205               	bcf	5,4	;volatile
  1420  014B  1285               	bcf	5,5	;volatile
  1421  014C                     l1518:	
  1422  014C  3003               	movlw	3
  1423  014D  00F2               	movwf	??_init_LED+2
  1424  014E  308A               	movlw	138
  1425  014F  00F1               	movwf	??_init_LED+1
  1426  0150  3055               	movlw	85
  1427  0151  00F0               	movwf	??_init_LED
  1428  0152                     u2037:	
  1429  0152  0BF0               	decfsz	??_init_LED,f
  1430  0153  2952               	goto	u2037
  1431  0154  0BF1               	decfsz	??_init_LED+1,f
  1432  0155  2952               	goto	u2037
  1433  0156  0BF2               	decfsz	??_init_LED+2,f
  1434  0157  2952               	goto	u2037
  1435  0158  2959               	nop2
  1436  0159                     l1520:	
  1437  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1438  015A  1485               	bsf	5,1	;volatile
  1439  015B                     l1522:	
  1440  015B  1605               	bsf	5,4	;volatile
  1441  015C                     l1524:	
  1442  015C  1685               	bsf	5,5	;volatile
  1443  015D                     l212:	
  1444  015D  0008               	return
  1445  015E                     __end_of_init_LED:	
  1446                           
  1447                           	psect	text2
  1448  0182                     __ptext2:	
  1449 ;; *************** function _get_temp_value *****************
  1450 ;; Defined at:
  1451 ;;		line 50 in file "main.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  i               2    2[BANK0 ] int 
  1456 ;;  result          2    0[BANK0 ] int 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2    9[COMMON] int 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1
  1466 ;;      Params:         2       0       0
  1467 ;;      Locals:         0       4       0
  1468 ;;      Temps:          0       0       0
  1469 ;;      Totals:         2       4       0
  1470 ;;Total ram usage:        6 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    1
  1473 ;; This function calls:
  1474 ;;		___awdiv
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _get_temp_value
  1482  0182                     _get_temp_value:	
  1483  0182                     l1496:	
  1484                           ;incstack = 0
  1485                           ; Regs used in _get_temp_value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1486                           
  1487                           
  1488                           ;main.c: 51:     int result = 2/2;
  1489  0182  3001               	movlw	1
  1490  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0184  00A0               	movwf	get_temp_value@result
  1492  0185  3000               	movlw	0
  1493  0186  00A1               	movwf	get_temp_value@result+1
  1494  0187                     l1498:	
  1495                           
  1496                           ;main.c: 52:     for (int i=0; i<2; i++) {
  1497  0187  01A2               	clrf	get_temp_value@i
  1498  0188  01A3               	clrf	get_temp_value@i+1
  1499  0189                     l1504:	
  1500                           
  1501                           ;main.c: 53:         result = result + temp[i];
  1502  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1503  018A  0822               	movf	get_temp_value@i,w
  1504  018B  3E49               	addlw	(low (_temp| 0))& (0+255)
  1505  018C  0084               	movwf	4
  1506  018D  1383               	bcf	3,7	;select IRP bank0
  1507  018E  0800               	movf	0,w
  1508  018F  0720               	addwf	get_temp_value@result,w
  1509  0190  00A0               	movwf	get_temp_value@result
  1510  0191  0821               	movf	get_temp_value@result+1,w
  1511  0192  1803               	skipnc
  1512  0193  0A21               	incf	get_temp_value@result+1,w
  1513  0194  00A1               	movwf	get_temp_value@result+1
  1514  0195                     l1506:	
  1515                           
  1516                           ;main.c: 54:     };
  1517  0195  3001               	movlw	1
  1518  0196  07A2               	addwf	get_temp_value@i,f
  1519  0197  1803               	skipnc
  1520  0198  0AA3               	incf	get_temp_value@i+1,f
  1521  0199  3000               	movlw	0
  1522  019A  07A3               	addwf	get_temp_value@i+1,f
  1523  019B                     l1508:	
  1524  019B  0823               	movf	get_temp_value@i+1,w
  1525  019C  3A80               	xorlw	128
  1526  019D  00FF               	movwf	btemp+1
  1527  019E  3080               	movlw	128
  1528  019F  027F               	subwf	btemp+1,w
  1529  01A0  1D03               	skipz
  1530  01A1  29A4               	goto	u1145
  1531  01A2  3002               	movlw	2
  1532  01A3  0222               	subwf	get_temp_value@i,w
  1533  01A4                     u1145:	
  1534  01A4  1C03               	skipc
  1535  01A5  29A7               	goto	u1141
  1536  01A6  29A8               	goto	u1140
  1537  01A7                     u1141:	
  1538  01A7  2989               	goto	l1504
  1539  01A8                     u1140:	
  1540  01A8                     l1510:	
  1541                           
  1542                           ;main.c: 55:     return result/2;
  1543  01A8  3002               	movlw	2
  1544  01A9  00F0               	movwf	___awdiv@divisor
  1545  01AA  3000               	movlw	0
  1546  01AB  00F1               	movwf	___awdiv@divisor+1
  1547  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1548  01AD  0821               	movf	get_temp_value@result+1,w
  1549  01AE  00F3               	movwf	___awdiv@dividend+1
  1550  01AF  0820               	movf	get_temp_value@result,w
  1551  01B0  00F2               	movwf	___awdiv@dividend
  1552  01B1  21F1               	fcall	___awdiv
  1553  01B2  0871               	movf	?___awdiv+1,w
  1554  01B3  00FA               	movwf	?_get_temp_value+1
  1555  01B4  0870               	movf	?___awdiv,w
  1556  01B5  00F9               	movwf	?_get_temp_value
  1557  01B6                     l65:	
  1558  01B6  0008               	return
  1559  01B7                     __end_of_get_temp_value:	
  1560                           
  1561                           	psect	text3
  1562  00E2                     __ptext3:	
  1563 ;; *************** function _draw_to *****************
  1564 ;; Defined at:
  1565 ;;		line 232 in file "7-segment-x-3.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1
  1579 ;;      Params:         0       0       0
  1580 ;;      Locals:         0       0       0
  1581 ;;      Temps:          0       0       0
  1582 ;;      Totals:         0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    2
  1586 ;; This function calls:
  1587 ;;		_show_LED1
  1588 ;;		_show_LED2
  1589 ;;		_show_LED3
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _draw_to
  1597  00E2                     _draw_to:	
  1598  00E2                     l1526:	
  1599                           ;incstack = 0
  1600                           ; Regs used in _draw_to: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1601                           
  1602  00E2  300F               	movlw	15
  1603  00E3  20F9               	fcall	_show_LED1
  1604  00E4  300E               	movlw	14
  1605  00E5  210A               	fcall	_show_LED2
  1606  00E6  300E               	movlw	14
  1607  00E7  211B               	fcall	_show_LED3
  1608  00E8                     l199:	
  1609  00E8  0008               	return
  1610  00E9                     __end_of_draw_to:	
  1611                           
  1612                           	psect	text4
  1613  01B7                     __ptext4:	
  1614 ;; *************** function _draw_temp *****************
  1615 ;; Defined at:
  1616 ;;		line 207 in file "7-segment-x-3.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  i               1    wreg     unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  i               1    4[BANK0 ] unsigned char 
  1621 ;;  d               1    5[BANK0 ] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1
  1631 ;;      Params:         0       0       0
  1632 ;;      Locals:         0       2       0
  1633 ;;      Temps:          0       4       0
  1634 ;;      Totals:         0       6       0
  1635 ;;Total ram usage:        6 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    2
  1638 ;; This function calls:
  1639 ;;		___awdiv
  1640 ;;		___bmul
  1641 ;;		_show_LED1
  1642 ;;		_show_LED2
  1643 ;;		_show_LED3
  1644 ;; This function is called by:
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function _draw_temp
  1651  01B7                     _draw_temp:	
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in _draw_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1655                           ;draw_temp@i stored from wreg
  1656  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1657  01B8  00A4               	movwf	draw_temp@i
  1658  01B9                     l1530:	
  1659  01B9  300A               	movlw	10
  1660  01BA  00F0               	movwf	___awdiv@divisor
  1661  01BB  3000               	movlw	0
  1662  01BC  00F1               	movwf	___awdiv@divisor+1
  1663  01BD  0824               	movf	draw_temp@i,w
  1664  01BE  00A0               	movwf	??_draw_temp
  1665  01BF  01A1               	clrf	??_draw_temp+1
  1666  01C0  0820               	movf	??_draw_temp,w
  1667  01C1  00F2               	movwf	___awdiv@dividend
  1668  01C2  0821               	movf	??_draw_temp+1,w
  1669  01C3  00F3               	movwf	___awdiv@dividend+1
  1670  01C4  21F1               	fcall	___awdiv
  1671  01C5  0870               	movf	?___awdiv,w
  1672  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1673  01C7  00A2               	movwf	??_draw_temp+2
  1674  01C8  0822               	movf	??_draw_temp+2,w
  1675  01C9  00A5               	movwf	draw_temp@d
  1676  01CA                     l1532:	
  1677  01CA  0825               	movf	draw_temp@d,w
  1678  01CB  1903               	btfsc	3,2
  1679  01CC  29CE               	goto	u1151
  1680  01CD  29CF               	goto	u1150
  1681  01CE                     u1151:	
  1682  01CE  29D2               	goto	l1536
  1683  01CF                     u1150:	
  1684  01CF                     l1534:	
  1685  01CF  0825               	movf	draw_temp@d,w
  1686  01D0  20F9               	fcall	_show_LED1
  1687  01D1  29D4               	goto	l1538
  1688  01D2                     l1536:	
  1689  01D2  3010               	movlw	16
  1690  01D3  20F9               	fcall	_show_LED1
  1691  01D4                     l1538:	
  1692  01D4  30F6               	movlw	246
  1693  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1694  01D6  00A0               	movwf	??_draw_temp
  1695  01D7  0820               	movf	??_draw_temp,w
  1696  01D8  00F9               	movwf	___bmul@multiplicand
  1697  01D9  0824               	movf	draw_temp@i,w
  1698  01DA  00A1               	movwf	??_draw_temp+1
  1699  01DB  01A2               	clrf	??_draw_temp+2
  1700  01DC  0821               	movf	??_draw_temp+1,w
  1701  01DD  00F2               	movwf	___awdiv@dividend
  1702  01DE  0822               	movf	??_draw_temp+2,w
  1703  01DF  00F3               	movwf	___awdiv@dividend+1
  1704  01E0  300A               	movlw	10
  1705  01E1  00F0               	movwf	___awdiv@divisor
  1706  01E2  3000               	movlw	0
  1707  01E3  00F1               	movwf	___awdiv@divisor+1
  1708  01E4  21F1               	fcall	___awdiv
  1709  01E5  0870               	movf	?___awdiv,w
  1710  01E6  212C               	fcall	___bmul
  1711  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1712  01E8  0724               	addwf	draw_temp@i,w
  1713  01E9  00A3               	movwf	??_draw_temp+3
  1714  01EA  0823               	movf	??_draw_temp+3,w
  1715  01EB  00A5               	movwf	draw_temp@d
  1716  01EC                     l1540:	
  1717  01EC  0825               	movf	draw_temp@d,w
  1718  01ED  210A               	fcall	_show_LED2
  1719  01EE                     l1542:	
  1720  01EE  300C               	movlw	12
  1721  01EF  211B               	fcall	_show_LED3
  1722  01F0                     l190:	
  1723  01F0  0008               	return
  1724  01F1                     __end_of_draw_temp:	
  1725                           
  1726                           	psect	text5
  1727  012C                     __ptext5:	
  1728 ;; *************** function ___bmul *****************
  1729 ;; Defined at:
  1730 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul8.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  multiplier      1    wreg     unsigned char 
  1733 ;;  multiplicand    1    9[COMMON] unsigned char 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  multiplier      1   12[COMMON] unsigned char 
  1736 ;;  product         1   11[COMMON] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      unsigned char 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1
  1746 ;;      Params:         1       0       0
  1747 ;;      Locals:         2       0       0
  1748 ;;      Temps:          1       0       0
  1749 ;;      Totals:         4       0       0
  1750 ;;Total ram usage:        4 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_draw_temp
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function ___bmul
  1761  012C                     ___bmul:	
  1762                           
  1763                           ;incstack = 0
  1764                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1765                           ;___bmul@multiplier stored from wreg
  1766  012C  00FC               	movwf	___bmul@multiplier
  1767  012D                     l1438:	
  1768  012D  01FB               	clrf	___bmul@product
  1769  012E                     l1440:	
  1770  012E  1C7C               	btfss	___bmul@multiplier,0
  1771  012F  2931               	goto	u1021
  1772  0130  2932               	goto	u1020
  1773  0131                     u1021:	
  1774  0131  2936               	goto	l1444
  1775  0132                     u1020:	
  1776  0132                     l1442:	
  1777  0132  0879               	movf	___bmul@multiplicand,w
  1778  0133  00FA               	movwf	??___bmul
  1779  0134  087A               	movf	??___bmul,w
  1780  0135  07FB               	addwf	___bmul@product,f
  1781  0136                     l1444:	
  1782  0136  1003               	clrc
  1783  0137  0DF9               	rlf	___bmul@multiplicand,f
  1784  0138                     l1446:	
  1785  0138  1003               	clrc
  1786  0139  0CFC               	rrf	___bmul@multiplier,f
  1787  013A  087C               	movf	___bmul@multiplier,w
  1788  013B  1D03               	btfss	3,2
  1789  013C  293E               	goto	u1031
  1790  013D  293F               	goto	u1030
  1791  013E                     u1031:	
  1792  013E  292E               	goto	l1440
  1793  013F                     u1030:	
  1794  013F                     l1448:	
  1795  013F  087B               	movf	___bmul@product,w
  1796  0140                     l342:	
  1797  0140  0008               	return
  1798  0141                     __end_of___bmul:	
  1799                           
  1800                           	psect	text6
  1801  01F1                     __ptext6:	
  1802 ;; *************** function ___awdiv *****************
  1803 ;; Defined at:
  1804 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  divisor         2    0[COMMON] int 
  1807 ;;  dividend        2    2[COMMON] int 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  quotient        2    7[COMMON] int 
  1810 ;;  sign            1    6[COMMON] unsigned char 
  1811 ;;  counter         1    5[COMMON] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  2    0[COMMON] int 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1
  1821 ;;      Params:         4       0       0
  1822 ;;      Locals:         4       0       0
  1823 ;;      Temps:          1       0       0
  1824 ;;      Totals:         9       0       0
  1825 ;;Total ram usage:        9 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_get_temp_value
  1831 ;;		_draw_temp
  1832 ;;		_draw_to_LED
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function ___awdiv
  1838  01F1                     ___awdiv:	
  1839  01F1                     l1452:	
  1840                           ;incstack = 0
  1841                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1842                           
  1843  01F1  01F6               	clrf	___awdiv@sign
  1844  01F2                     l1454:	
  1845  01F2  1FF1               	btfss	___awdiv@divisor+1,7
  1846  01F3  29F5               	goto	u1041
  1847  01F4  29F6               	goto	u1040
  1848  01F5                     u1041:	
  1849  01F5  29FD               	goto	l1460
  1850  01F6                     u1040:	
  1851  01F6                     l1456:	
  1852  01F6  09F0               	comf	___awdiv@divisor,f
  1853  01F7  09F1               	comf	___awdiv@divisor+1,f
  1854  01F8  0AF0               	incf	___awdiv@divisor,f
  1855  01F9  1903               	skipnz
  1856  01FA  0AF1               	incf	___awdiv@divisor+1,f
  1857  01FB                     l1458:	
  1858  01FB  01F6               	clrf	___awdiv@sign
  1859  01FC  0AF6               	incf	___awdiv@sign,f
  1860  01FD                     l1460:	
  1861  01FD  1FF3               	btfss	___awdiv@dividend+1,7
  1862  01FE  2A00               	goto	u1051
  1863  01FF  2A01               	goto	u1050
  1864  0200                     u1051:	
  1865  0200  2A0A               	goto	l1466
  1866  0201                     u1050:	
  1867  0201                     l1462:	
  1868  0201  09F2               	comf	___awdiv@dividend,f
  1869  0202  09F3               	comf	___awdiv@dividend+1,f
  1870  0203  0AF2               	incf	___awdiv@dividend,f
  1871  0204  1903               	skipnz
  1872  0205  0AF3               	incf	___awdiv@dividend+1,f
  1873  0206                     l1464:	
  1874  0206  3001               	movlw	1
  1875  0207  00F4               	movwf	??___awdiv
  1876  0208  0874               	movf	??___awdiv,w
  1877  0209  06F6               	xorwf	___awdiv@sign,f
  1878  020A                     l1466:	
  1879  020A  01F7               	clrf	___awdiv@quotient
  1880  020B  01F8               	clrf	___awdiv@quotient+1
  1881  020C                     l1468:	
  1882  020C  0870               	movf	___awdiv@divisor,w
  1883  020D  0471               	iorwf	___awdiv@divisor+1,w
  1884  020E  1903               	btfsc	3,2
  1885  020F  2A11               	goto	u1061
  1886  0210  2A12               	goto	u1060
  1887  0211                     u1061:	
  1888  0211  2A49               	goto	l1488
  1889  0212                     u1060:	
  1890  0212                     l1470:	
  1891  0212  01F5               	clrf	___awdiv@counter
  1892  0213  0AF5               	incf	___awdiv@counter,f
  1893  0214  2A20               	goto	l1476
  1894  0215                     l1472:	
  1895  0215  3001               	movlw	1
  1896  0216                     u1075:	
  1897  0216  1003               	clrc
  1898  0217  0DF0               	rlf	___awdiv@divisor,f
  1899  0218  0DF1               	rlf	___awdiv@divisor+1,f
  1900  0219  3EFF               	addlw	-1
  1901  021A  1D03               	skipz
  1902  021B  2A16               	goto	u1075
  1903  021C                     l1474:	
  1904  021C  3001               	movlw	1
  1905  021D  00F4               	movwf	??___awdiv
  1906  021E  0874               	movf	??___awdiv,w
  1907  021F  07F5               	addwf	___awdiv@counter,f
  1908  0220                     l1476:	
  1909  0220  1FF1               	btfss	___awdiv@divisor+1,7
  1910  0221  2A23               	goto	u1081
  1911  0222  2A24               	goto	u1080
  1912  0223                     u1081:	
  1913  0223  2A15               	goto	l1472
  1914  0224                     u1080:	
  1915  0224                     l1478:	
  1916  0224  3001               	movlw	1
  1917  0225                     u1095:	
  1918  0225  1003               	clrc
  1919  0226  0DF7               	rlf	___awdiv@quotient,f
  1920  0227  0DF8               	rlf	___awdiv@quotient+1,f
  1921  0228  3EFF               	addlw	-1
  1922  0229  1D03               	skipz
  1923  022A  2A25               	goto	u1095
  1924  022B  0871               	movf	___awdiv@divisor+1,w
  1925  022C  0273               	subwf	___awdiv@dividend+1,w
  1926  022D  1D03               	skipz
  1927  022E  2A31               	goto	u1105
  1928  022F  0870               	movf	___awdiv@divisor,w
  1929  0230  0272               	subwf	___awdiv@dividend,w
  1930  0231                     u1105:	
  1931  0231  1C03               	skipc
  1932  0232  2A34               	goto	u1101
  1933  0233  2A35               	goto	u1100
  1934  0234                     u1101:	
  1935  0234  2A3C               	goto	l1484
  1936  0235                     u1100:	
  1937  0235                     l1480:	
  1938  0235  0870               	movf	___awdiv@divisor,w
  1939  0236  02F2               	subwf	___awdiv@dividend,f
  1940  0237  0871               	movf	___awdiv@divisor+1,w
  1941  0238  1C03               	skipc
  1942  0239  03F3               	decf	___awdiv@dividend+1,f
  1943  023A  02F3               	subwf	___awdiv@dividend+1,f
  1944  023B                     l1482:	
  1945  023B  1477               	bsf	___awdiv@quotient,0
  1946  023C                     l1484:	
  1947  023C  3001               	movlw	1
  1948  023D                     u1115:	
  1949  023D  1003               	clrc
  1950  023E  0CF1               	rrf	___awdiv@divisor+1,f
  1951  023F  0CF0               	rrf	___awdiv@divisor,f
  1952  0240  3EFF               	addlw	-1
  1953  0241  1D03               	skipz
  1954  0242  2A3D               	goto	u1115
  1955  0243                     l1486:	
  1956  0243  3001               	movlw	1
  1957  0244  02F5               	subwf	___awdiv@counter,f
  1958  0245  1D03               	btfss	3,2
  1959  0246  2A48               	goto	u1121
  1960  0247  2A49               	goto	u1120
  1961  0248                     u1121:	
  1962  0248  2A24               	goto	l1478
  1963  0249                     u1120:	
  1964  0249                     l1488:	
  1965  0249  0876               	movf	___awdiv@sign,w
  1966  024A  1903               	btfsc	3,2
  1967  024B  2A4D               	goto	u1131
  1968  024C  2A4E               	goto	u1130
  1969  024D                     u1131:	
  1970  024D  2A53               	goto	l1492
  1971  024E                     u1130:	
  1972  024E                     l1490:	
  1973  024E  09F7               	comf	___awdiv@quotient,f
  1974  024F  09F8               	comf	___awdiv@quotient+1,f
  1975  0250  0AF7               	incf	___awdiv@quotient,f
  1976  0251  1903               	skipnz
  1977  0252  0AF8               	incf	___awdiv@quotient+1,f
  1978  0253                     l1492:	
  1979  0253  0878               	movf	___awdiv@quotient+1,w
  1980  0254  00F1               	movwf	?___awdiv+1
  1981  0255  0877               	movf	___awdiv@quotient,w
  1982  0256  00F0               	movwf	?___awdiv
  1983  0257                     l469:	
  1984  0257  0008               	return
  1985  0258                     __end_of___awdiv:	
  1986                           
  1987                           	psect	text7
  1988  00E9                     __ptext7:	
  1989 ;; *************** function _draw_needed_amount *****************
  1990 ;; Defined at:
  1991 ;;		line 220 in file "7-segment-x-3.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  i               1    wreg     unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  i               1    6[COMMON] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1
  2005 ;;      Params:         0       0       0
  2006 ;;      Locals:         1       0       0
  2007 ;;      Temps:          0       0       0
  2008 ;;      Totals:         1       0       0
  2009 ;;Total ram usage:        1 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    2
  2012 ;; This function calls:
  2013 ;;		_show_LED1
  2014 ;;		_show_LED2
  2015 ;;		_show_LED3
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function _draw_needed_amount
  2023  00E9                     _draw_needed_amount:	
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _draw_needed_amount: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2027                           ;draw_needed_amount@i stored from wreg
  2028  00E9  00F6               	movwf	draw_needed_amount@i
  2029  00EA                     l1548:	
  2030  00EA  3010               	movlw	16
  2031  00EB  20F9               	fcall	_show_LED1
  2032  00EC  0876               	movf	draw_needed_amount@i,w
  2033  00ED  210A               	fcall	_show_LED2
  2034  00EE  3010               	movlw	16
  2035  00EF  211B               	fcall	_show_LED3
  2036  00F0                     l193:	
  2037  00F0  0008               	return
  2038  00F1                     __end_of_draw_needed_amount:	
  2039                           
  2040                           	psect	text8
  2041  00DB                     __ptext8:	
  2042 ;; *************** function _draw_minus *****************
  2043 ;; Defined at:
  2044 ;;		line 226 in file "7-segment-x-3.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1
  2058 ;;      Params:         0       0       0
  2059 ;;      Locals:         0       0       0
  2060 ;;      Temps:          0       0       0
  2061 ;;      Totals:         0       0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    2
  2065 ;; This function calls:
  2066 ;;		_show_LED1
  2067 ;;		_show_LED2
  2068 ;;		_show_LED3
  2069 ;; This function is called by:
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _draw_minus
  2076  00DB                     _draw_minus:	
  2077  00DB                     l1544:	
  2078                           ;incstack = 0
  2079                           ; Regs used in _draw_minus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2080                           
  2081  00DB  3010               	movlw	16
  2082  00DC  20F9               	fcall	_show_LED1
  2083  00DD  3011               	movlw	17
  2084  00DE  210A               	fcall	_show_LED2
  2085  00DF  3010               	movlw	16
  2086  00E0  211B               	fcall	_show_LED3
  2087  00E1                     l196:	
  2088  00E1  0008               	return
  2089  00E2                     __end_of_draw_minus:	
  2090                           
  2091                           	psect	text9
  2092  00D4                     __ptext9:	
  2093 ;; *************** function _draw_hot *****************
  2094 ;; Defined at:
  2095 ;;		line 238 in file "7-segment-x-3.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1
  2109 ;;      Params:         0       0       0
  2110 ;;      Locals:         0       0       0
  2111 ;;      Temps:          0       0       0
  2112 ;;      Totals:         0       0       0
  2113 ;;Total ram usage:        0 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    2
  2116 ;; This function calls:
  2117 ;;		_show_LED1
  2118 ;;		_show_LED2
  2119 ;;		_show_LED3
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _draw_hot
  2127  00D4                     _draw_hot:	
  2128  00D4                     l1528:	
  2129                           ;incstack = 0
  2130                           ; Regs used in _draw_hot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2131                           
  2132  00D4  300D               	movlw	13
  2133  00D5  20F9               	fcall	_show_LED1
  2134  00D6  300E               	movlw	14
  2135  00D7  210A               	fcall	_show_LED2
  2136  00D8  300F               	movlw	15
  2137  00D9  211B               	fcall	_show_LED3
  2138  00DA                     l202:	
  2139  00DA  0008               	return
  2140  00DB                     __end_of_draw_hot:	
  2141                           
  2142                           	psect	text10
  2143  00CD                     __ptext10:	
  2144 ;; *************** function _draw_add *****************
  2145 ;; Defined at:
  2146 ;;		line 201 in file "7-segment-x-3.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1
  2160 ;;      Params:         0       0       0
  2161 ;;      Locals:         0       0       0
  2162 ;;      Temps:          0       0       0
  2163 ;;      Totals:         0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    2
  2167 ;; This function calls:
  2168 ;;		_show_LED1
  2169 ;;		_show_LED2
  2170 ;;		_show_LED3
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _draw_add
  2178  00CD                     _draw_add:	
  2179  00CD                     l1546:	
  2180                           ;incstack = 0
  2181                           ; Regs used in _draw_add: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2182                           
  2183  00CD  300A               	movlw	10
  2184  00CE  20F9               	fcall	_show_LED1
  2185  00CF  300B               	movlw	11
  2186  00D0  210A               	fcall	_show_LED2
  2187  00D1  300B               	movlw	11
  2188  00D2  211B               	fcall	_show_LED3
  2189  00D3                     l185:	
  2190  00D3  0008               	return
  2191  00D4                     __end_of_draw_add:	
  2192                           
  2193                           	psect	text11
  2194  011B                     __ptext11:	
  2195 ;; *************** function _show_LED3 *****************
  2196 ;; Defined at:
  2197 ;;		line 194 in file "7-segment-x-3.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  c               1    wreg     unsigned char 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  c               1    5[COMMON] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1
  2211 ;;      Params:         0       0       0
  2212 ;;      Locals:         1       0       0
  2213 ;;      Temps:          2       0       0
  2214 ;;      Totals:         3       0       0
  2215 ;;Total ram usage:        3 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    1
  2218 ;; This function calls:
  2219 ;;		_convert_to_segment
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;;		_draw_add
  2223 ;;		_draw_temp
  2224 ;;		_draw_needed_amount
  2225 ;;		_draw_minus
  2226 ;;		_draw_to
  2227 ;;		_draw_hot
  2228 ;;		_draw_to_LED
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function _show_LED3
  2234  011B                     _show_LED3:	
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in _show_LED3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2238                           ;show_LED3@c stored from wreg
  2239  011B  00F5               	movwf	show_LED3@c
  2240  011C                     l1430:	
  2241  011C  0875               	movf	show_LED3@c,w
  2242  011D  238D               	fcall	_convert_to_segment
  2243  011E                     l1432:	
  2244  011E  1283               	bcf	3,5	;RP0=0, select bank0
  2245  011F  1285               	bcf	5,5	;volatile
  2246  0120                     l1434:	
  2247  0120  3008               	movlw	8
  2248  0121  00F4               	movwf	??_show_LED3+1
  2249  0122  30C9               	movlw	201
  2250  0123  00F3               	movwf	??_show_LED3
  2251  0124                     u2047:	
  2252  0124  0BF3               	decfsz	??_show_LED3,f
  2253  0125  2924               	goto	u2047
  2254  0126  0BF4               	decfsz	??_show_LED3+1,f
  2255  0127  2924               	goto	u2047
  2256  0128  2929               	nop2
  2257  0129                     l1436:	
  2258  0129  1283               	bcf	3,5	;RP0=0, select bank0
  2259  012A  1685               	bsf	5,5	;volatile
  2260  012B                     l182:	
  2261  012B  0008               	return
  2262  012C                     __end_of_show_LED3:	
  2263                           
  2264                           	psect	text12
  2265  010A                     __ptext12:	
  2266 ;; *************** function _show_LED2 *****************
  2267 ;; Defined at:
  2268 ;;		line 187 in file "7-segment-x-3.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  c               1    wreg     unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  c               1    5[COMMON] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1
  2282 ;;      Params:         0       0       0
  2283 ;;      Locals:         1       0       0
  2284 ;;      Temps:          2       0       0
  2285 ;;      Totals:         3       0       0
  2286 ;;Total ram usage:        3 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    1
  2289 ;; This function calls:
  2290 ;;		_convert_to_segment
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;;		_draw_add
  2294 ;;		_draw_temp
  2295 ;;		_draw_needed_amount
  2296 ;;		_draw_minus
  2297 ;;		_draw_to
  2298 ;;		_draw_hot
  2299 ;;		_draw_to_LED
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _show_LED2
  2305  010A                     _show_LED2:	
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _show_LED2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2309                           ;show_LED2@c stored from wreg
  2310  010A  00F5               	movwf	show_LED2@c
  2311  010B                     l1422:	
  2312  010B  0875               	movf	show_LED2@c,w
  2313  010C  238D               	fcall	_convert_to_segment
  2314  010D                     l1424:	
  2315  010D  1283               	bcf	3,5	;RP0=0, select bank0
  2316  010E  1205               	bcf	5,4	;volatile
  2317  010F                     l1426:	
  2318  010F  3008               	movlw	8
  2319  0110  00F4               	movwf	??_show_LED2+1
  2320  0111  30C9               	movlw	201
  2321  0112  00F3               	movwf	??_show_LED2
  2322  0113                     u2057:	
  2323  0113  0BF3               	decfsz	??_show_LED2,f
  2324  0114  2913               	goto	u2057
  2325  0115  0BF4               	decfsz	??_show_LED2+1,f
  2326  0116  2913               	goto	u2057
  2327  0117  2918               	nop2
  2328  0118                     l1428:	
  2329  0118  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0119  1605               	bsf	5,4	;volatile
  2331  011A                     l179:	
  2332  011A  0008               	return
  2333  011B                     __end_of_show_LED2:	
  2334                           
  2335                           	psect	text13
  2336  00F9                     __ptext13:	
  2337 ;; *************** function _show_LED1 *****************
  2338 ;; Defined at:
  2339 ;;		line 180 in file "7-segment-x-3.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  c               1    wreg     unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  c               1    5[COMMON] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1
  2353 ;;      Params:         0       0       0
  2354 ;;      Locals:         1       0       0
  2355 ;;      Temps:          2       0       0
  2356 ;;      Totals:         3       0       0
  2357 ;;Total ram usage:        3 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    1
  2360 ;; This function calls:
  2361 ;;		_convert_to_segment
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;;		_draw_add
  2365 ;;		_draw_temp
  2366 ;;		_draw_needed_amount
  2367 ;;		_draw_minus
  2368 ;;		_draw_to
  2369 ;;		_draw_hot
  2370 ;;		_draw_to_LED
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _show_LED1
  2376  00F9                     _show_LED1:	
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in _show_LED1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2380                           ;show_LED1@c stored from wreg
  2381  00F9  00F5               	movwf	show_LED1@c
  2382  00FA                     l1414:	
  2383  00FA  0875               	movf	show_LED1@c,w
  2384  00FB  238D               	fcall	_convert_to_segment
  2385  00FC                     l1416:	
  2386  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  2387  00FD  1085               	bcf	5,1	;volatile
  2388  00FE                     l1418:	
  2389  00FE  3008               	movlw	8
  2390  00FF  00F4               	movwf	??_show_LED1+1
  2391  0100  30C9               	movlw	201
  2392  0101  00F3               	movwf	??_show_LED1
  2393  0102                     u2067:	
  2394  0102  0BF3               	decfsz	??_show_LED1,f
  2395  0103  2902               	goto	u2067
  2396  0104  0BF4               	decfsz	??_show_LED1+1,f
  2397  0105  2902               	goto	u2067
  2398  0106  2907               	nop2
  2399  0107                     l1420:	
  2400  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0108  1485               	bsf	5,1	;volatile
  2402  0109                     l176:	
  2403  0109  0008               	return
  2404  010A                     __end_of_show_LED1:	
  2405                           
  2406                           	psect	text14
  2407  038D                     __ptext14:	
  2408 ;; *************** function _convert_to_segment *****************
  2409 ;; Defined at:
  2410 ;;		line 4 in file "7-segment-x-3.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  value           1    wreg     unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  value           1    2[COMMON] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1
  2424 ;;      Params:         0       0       0
  2425 ;;      Locals:         1       0       0
  2426 ;;      Temps:          2       0       0
  2427 ;;      Totals:         3       0       0
  2428 ;;Total ram usage:        3 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_show_LED1
  2434 ;;		_show_LED2
  2435 ;;		_show_LED3
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _convert_to_segment
  2441  038D                     _convert_to_segment:	
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _convert_to_segment: [wreg-fsr0h+status,2+status,0]
  2445                           ;convert_to_segment@value stored from wreg
  2446  038D  00F2               	movwf	convert_to_segment@value
  2447  038E                     l1404:	
  2448  038E  2C3A               	goto	l1408
  2449  038F                     l153:	
  2450  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0390  1007               	bcf	7,0	;volatile
  2452  0391  1087               	bcf	7,1	;volatile
  2453  0392  1107               	bcf	7,2	;volatile
  2454  0393  1187               	bcf	7,3	;volatile
  2455  0394  1207               	bcf	7,4	;volatile
  2456  0395  1287               	bcf	7,5	;volatile
  2457  0396  1005               	bcf	5,0	;volatile
  2458  0397  2C7A               	goto	l173
  2459  0398                     l155:	
  2460  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0399  1007               	bcf	7,0	;volatile
  2462  039A  1087               	bcf	7,1	;volatile
  2463  039B  1107               	bcf	7,2	;volatile
  2464  039C  1187               	bcf	7,3	;volatile
  2465  039D  1207               	bcf	7,4	;volatile
  2466  039E  1287               	bcf	7,5	;volatile
  2467  039F  1405               	bsf	5,0	;volatile
  2468  03A0  2C7A               	goto	l173
  2469  03A1                     l156:	
  2470  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2471  03A2  1407               	bsf	7,0	;volatile
  2472  03A3  1487               	bsf	7,1	;volatile
  2473  03A4  1507               	bsf	7,2	;volatile
  2474  03A5  1587               	bsf	7,3	;volatile
  2475  03A6  1607               	bsf	7,4	;volatile
  2476  03A7  1687               	bsf	7,5	;volatile
  2477  03A8  1005               	bcf	5,0	;volatile
  2478  03A9  2C7A               	goto	l173
  2479  03AA                     l157:	
  2480  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2481  03AB  1007               	bcf	7,0	;volatile
  2482  03AC  1487               	bsf	7,1	;volatile
  2483  03AD  1507               	bsf	7,2	;volatile
  2484  03AE  1187               	bcf	7,3	;volatile
  2485  03AF  1207               	bcf	7,4	;volatile
  2486  03B0  1287               	bcf	7,5	;volatile
  2487  03B1  1005               	bcf	5,0	;volatile
  2488  03B2  2C7A               	goto	l173
  2489  03B3                     l158:	
  2490  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2491  03B4  1407               	bsf	7,0	;volatile
  2492  03B5  1487               	bsf	7,1	;volatile
  2493  03B6  1107               	bcf	7,2	;volatile
  2494  03B7  1587               	bsf	7,3	;volatile
  2495  03B8  1607               	bsf	7,4	;volatile
  2496  03B9  1287               	bcf	7,5	;volatile
  2497  03BA  1405               	bsf	5,0	;volatile
  2498  03BB  2C7A               	goto	l173
  2499  03BC                     l159:	
  2500  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2501  03BD  1407               	bsf	7,0	;volatile
  2502  03BE  1487               	bsf	7,1	;volatile
  2503  03BF  1507               	bsf	7,2	;volatile
  2504  03C0  1587               	bsf	7,3	;volatile
  2505  03C1  1207               	bcf	7,4	;volatile
  2506  03C2  1287               	bcf	7,5	;volatile
  2507  03C3  1405               	bsf	5,0	;volatile
  2508  03C4  2C7A               	goto	l173
  2509  03C5                     l160:	
  2510  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2511  03C6  1007               	bcf	7,0	;volatile
  2512  03C7  1487               	bsf	7,1	;volatile
  2513  03C8  1507               	bsf	7,2	;volatile
  2514  03C9  1187               	bcf	7,3	;volatile
  2515  03CA  1207               	bcf	7,4	;volatile
  2516  03CB  1687               	bsf	7,5	;volatile
  2517  03CC  1405               	bsf	5,0	;volatile
  2518  03CD  2C7A               	goto	l173
  2519  03CE                     l161:	
  2520  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2521  03CF  1407               	bsf	7,0	;volatile
  2522  03D0  1087               	bcf	7,1	;volatile
  2523  03D1  1507               	bsf	7,2	;volatile
  2524  03D2  1587               	bsf	7,3	;volatile
  2525  03D3  1207               	bcf	7,4	;volatile
  2526  03D4  1687               	bsf	7,5	;volatile
  2527  03D5  1405               	bsf	5,0	;volatile
  2528  03D6  2C7A               	goto	l173
  2529  03D7                     l162:	
  2530  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2531  03D8  1407               	bsf	7,0	;volatile
  2532  03D9  1087               	bcf	7,1	;volatile
  2533  03DA  1507               	bsf	7,2	;volatile
  2534  03DB  1587               	bsf	7,3	;volatile
  2535  03DC  1607               	bsf	7,4	;volatile
  2536  03DD  1687               	bsf	7,5	;volatile
  2537  03DE  1405               	bsf	5,0	;volatile
  2538  03DF  2C7A               	goto	l173
  2539  03E0                     l163:	
  2540  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2541  03E1  1407               	bsf	7,0	;volatile
  2542  03E2  1487               	bsf	7,1	;volatile
  2543  03E3  1507               	bsf	7,2	;volatile
  2544  03E4  1187               	bcf	7,3	;volatile
  2545  03E5  1207               	bcf	7,4	;volatile
  2546  03E6  1287               	bcf	7,5	;volatile
  2547  03E7  1005               	bcf	5,0	;volatile
  2548  03E8  2C7A               	goto	l173
  2549  03E9                     l164:	
  2550  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2551  03EA  1407               	bsf	7,0	;volatile
  2552  03EB  1487               	bsf	7,1	;volatile
  2553  03EC  1507               	bsf	7,2	;volatile
  2554  03ED  1587               	bsf	7,3	;volatile
  2555  03EE  1607               	bsf	7,4	;volatile
  2556  03EF  1687               	bsf	7,5	;volatile
  2557  03F0  1405               	bsf	5,0	;volatile
  2558  03F1  2C7A               	goto	l173
  2559  03F2                     l165:	
  2560  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2561  03F3  1407               	bsf	7,0	;volatile
  2562  03F4  1487               	bsf	7,1	;volatile
  2563  03F5  1507               	bsf	7,2	;volatile
  2564  03F6  1587               	bsf	7,3	;volatile
  2565  03F7  1207               	bcf	7,4	;volatile
  2566  03F8  1687               	bsf	7,5	;volatile
  2567  03F9  1405               	bsf	5,0	;volatile
  2568  03FA  2C7A               	goto	l173
  2569  03FB                     l166:	
  2570  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2571  03FC  1407               	bsf	7,0	;volatile
  2572  03FD  1487               	bsf	7,1	;volatile
  2573  03FE  1507               	bsf	7,2	;volatile
  2574  03FF  1187               	bcf	7,3	;volatile
  2575  0400  1607               	bsf	7,4	;volatile
  2576  0401  1687               	bsf	7,5	;volatile
  2577  0402  1405               	bsf	5,0	;volatile
  2578  0403  2C7A               	goto	l173
  2579  0404                     l167:	
  2580  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0405  1007               	bcf	7,0	;volatile
  2582  0406  1487               	bsf	7,1	;volatile
  2583  0407  1507               	bsf	7,2	;volatile
  2584  0408  1587               	bsf	7,3	;volatile
  2585  0409  1607               	bsf	7,4	;volatile
  2586  040A  1287               	bcf	7,5	;volatile
  2587  040B  1405               	bsf	5,0	;volatile
  2588  040C  2C7A               	goto	l173
  2589  040D                     l168:	
  2590  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2591  040E  1407               	bsf	7,0	;volatile
  2592  040F  1487               	bsf	7,1	;volatile
  2593  0410  1107               	bcf	7,2	;volatile
  2594  0411  1187               	bcf	7,3	;volatile
  2595  0412  1207               	bcf	7,4	;volatile
  2596  0413  1687               	bsf	7,5	;volatile
  2597  0414  1405               	bsf	5,0	;volatile
  2598  0415  2C7A               	goto	l173
  2599  0416                     l169:	
  2600  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0417  1007               	bcf	7,0	;volatile
  2602  0418  1087               	bcf	7,1	;volatile
  2603  0419  1507               	bsf	7,2	;volatile
  2604  041A  1187               	bcf	7,3	;volatile
  2605  041B  1607               	bsf	7,4	;volatile
  2606  041C  1687               	bsf	7,5	;volatile
  2607  041D  1405               	bsf	5,0	;volatile
  2608  041E  2C7A               	goto	l173
  2609  041F                     l170:	
  2610  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0420  1007               	bcf	7,0	;volatile
  2612  0421  1087               	bcf	7,1	;volatile
  2613  0422  1507               	bsf	7,2	;volatile
  2614  0423  1587               	bsf	7,3	;volatile
  2615  0424  1607               	bsf	7,4	;volatile
  2616  0425  1287               	bcf	7,5	;volatile
  2617  0426  1405               	bsf	5,0	;volatile
  2618  0427  2C7A               	goto	l173
  2619  0428                     l171:	
  2620  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0429  1007               	bcf	7,0	;volatile
  2622  042A  1087               	bcf	7,1	;volatile
  2623  042B  1107               	bcf	7,2	;volatile
  2624  042C  1587               	bsf	7,3	;volatile
  2625  042D  1607               	bsf	7,4	;volatile
  2626  042E  1687               	bsf	7,5	;volatile
  2627  042F  1405               	bsf	5,0	;volatile
  2628  0430  2C7A               	goto	l173
  2629  0431                     l172:	
  2630  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0432  1407               	bsf	7,0	;volatile
  2632  0433  1087               	bcf	7,1	;volatile
  2633  0434  1107               	bcf	7,2	;volatile
  2634  0435  1587               	bsf	7,3	;volatile
  2635  0436  1607               	bsf	7,4	;volatile
  2636  0437  1687               	bsf	7,5	;volatile
  2637  0438  1405               	bsf	5,0	;volatile
  2638  0439  2C7A               	goto	l173
  2639  043A                     l1408:	
  2640  043A  0872               	movf	convert_to_segment@value,w
  2641  043B  00F0               	movwf	??_convert_to_segment
  2642  043C  01F1               	clrf	??_convert_to_segment+1
  2643                           
  2644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2645                           ; Switch size 1, requested type "simple"
  2646                           ; Number of cases is 1, Range of values is 0 to 0
  2647                           ; switch strategies available:
  2648                           ; Name         Instructions Cycles
  2649                           ; simple_byte            4     3 (average)
  2650                           ; direct_byte            7     6 (fixed)
  2651                           ; jumptable            260     6 (fixed)
  2652                           ;	Chosen strategy is simple_byte
  2653  043D  0871               	movf	??_convert_to_segment+1,w
  2654  043E  3A00               	xorlw	0	; case 0
  2655  043F  1903               	skipnz
  2656  0440  2C42               	goto	l1976
  2657  0441  2C31               	goto	l172
  2658  0442                     l1976:	
  2659                           
  2660                           ; Switch size 1, requested type "simple"
  2661                           ; Number of cases is 18, Range of values is 0 to 17
  2662                           ; switch strategies available:
  2663                           ; Name         Instructions Cycles
  2664                           ; direct_byte           24     6 (fixed)
  2665                           ; simple_byte           55    28 (average)
  2666                           ; jumptable            260     6 (fixed)
  2667                           ;	Chosen strategy is simple_byte
  2668  0442  0870               	movf	??_convert_to_segment,w
  2669  0443  3A00               	xorlw	0	; case 0
  2670  0444  1903               	skipnz
  2671  0445  2BA1               	goto	l156
  2672  0446  3A01               	xorlw	1	; case 1
  2673  0447  1903               	skipnz
  2674  0448  2BAA               	goto	l157
  2675  0449  3A03               	xorlw	3	; case 2
  2676  044A  1903               	skipnz
  2677  044B  2BB3               	goto	l158
  2678  044C  3A01               	xorlw	1	; case 3
  2679  044D  1903               	skipnz
  2680  044E  2BBC               	goto	l159
  2681  044F  3A07               	xorlw	7	; case 4
  2682  0450  1903               	skipnz
  2683  0451  2BC5               	goto	l160
  2684  0452  3A01               	xorlw	1	; case 5
  2685  0453  1903               	skipnz
  2686  0454  2BCE               	goto	l161
  2687  0455  3A03               	xorlw	3	; case 6
  2688  0456  1903               	skipnz
  2689  0457  2BD7               	goto	l162
  2690  0458  3A01               	xorlw	1	; case 7
  2691  0459  1903               	skipnz
  2692  045A  2BE0               	goto	l163
  2693  045B  3A0F               	xorlw	15	; case 8
  2694  045C  1903               	skipnz
  2695  045D  2BE9               	goto	l164
  2696  045E  3A01               	xorlw	1	; case 9
  2697  045F  1903               	skipnz
  2698  0460  2BF2               	goto	l165
  2699  0461  3A03               	xorlw	3	; case 10
  2700  0462  1903               	skipnz
  2701  0463  2BFB               	goto	l166
  2702  0464  3A01               	xorlw	1	; case 11
  2703  0465  1903               	skipnz
  2704  0466  2C04               	goto	l167
  2705  0467  3A07               	xorlw	7	; case 12
  2706  0468  1903               	skipnz
  2707  0469  2C0D               	goto	l168
  2708  046A  3A01               	xorlw	1	; case 13
  2709  046B  1903               	skipnz
  2710  046C  2C16               	goto	l169
  2711  046D  3A03               	xorlw	3	; case 14
  2712  046E  1903               	skipnz
  2713  046F  2C1F               	goto	l170
  2714  0470  3A01               	xorlw	1	; case 15
  2715  0471  1903               	skipnz
  2716  0472  2C28               	goto	l171
  2717  0473  3A1F               	xorlw	31	; case 16
  2718  0474  1903               	skipnz
  2719  0475  2B8F               	goto	l153
  2720  0476  3A01               	xorlw	1	; case 17
  2721  0477  1903               	skipnz
  2722  0478  2B98               	goto	l155
  2723  0479  2C31               	goto	l172
  2724  047A                     l173:	
  2725  047A  0008               	return
  2726  047B                     __end_of_convert_to_segment:	
  2727                           
  2728                           	psect	text15
  2729  02D3                     __ptext15:	
  2730 ;; *************** function ___xxtofl *****************
  2731 ;; Defined at:
  2732 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/xxtofl.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  sign            1    wreg     unsigned char 
  2735 ;;  val             4    0[COMMON] long 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  sign            1    8[COMMON] unsigned char 
  2738 ;;  arg             4   10[COMMON] unsigned long 
  2739 ;;  exp             1    9[COMMON] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  4    0[COMMON] unsigned char 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1
  2749 ;;      Params:         4       0       0
  2750 ;;      Locals:         6       0       0
  2751 ;;      Temps:          4       0       0
  2752 ;;      Totals:        14       0       0
  2753 ;;Total ram usage:       14 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function ___xxtofl
  2764  02D3                     ___xxtofl:	
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2768                           ;___xxtofl@sign stored from wreg
  2769  02D3  00F8               	movwf	___xxtofl@sign
  2770  02D4                     l1740:	
  2771  02D4  0878               	movf	___xxtofl@sign,w
  2772  02D5  1903               	btfsc	3,2
  2773  02D6  2AD8               	goto	u1571
  2774  02D7  2AD9               	goto	u1570
  2775  02D8                     u1571:	
  2776  02D8  2AED               	goto	l1746
  2777  02D9                     u1570:	
  2778  02D9                     l1742:	
  2779  02D9  1FF3               	btfss	___xxtofl@val+3,7
  2780  02DA  2ADC               	goto	u1581
  2781  02DB  2ADD               	goto	u1580
  2782  02DC                     u1581:	
  2783  02DC  2AED               	goto	l1746
  2784  02DD                     u1580:	
  2785  02DD                     l1744:	
  2786  02DD  0970               	comf	___xxtofl@val,w
  2787  02DE  00FA               	movwf	___xxtofl@arg
  2788  02DF  0971               	comf	___xxtofl@val+1,w
  2789  02E0  00FB               	movwf	___xxtofl@arg+1
  2790  02E1  0972               	comf	___xxtofl@val+2,w
  2791  02E2  00FC               	movwf	___xxtofl@arg+2
  2792  02E3  0973               	comf	___xxtofl@val+3,w
  2793  02E4  00FD               	movwf	___xxtofl@arg+3
  2794  02E5  0AFA               	incf	___xxtofl@arg,f
  2795  02E6  1903               	skipnz
  2796  02E7  0AFB               	incf	___xxtofl@arg+1,f
  2797  02E8  1903               	skipnz
  2798  02E9  0AFC               	incf	___xxtofl@arg+2,f
  2799  02EA  1903               	skipnz
  2800  02EB  0AFD               	incf	___xxtofl@arg+3,f
  2801  02EC  2AF5               	goto	l743
  2802  02ED                     l1746:	
  2803  02ED  0873               	movf	___xxtofl@val+3,w
  2804  02EE  00FD               	movwf	___xxtofl@arg+3
  2805  02EF  0872               	movf	___xxtofl@val+2,w
  2806  02F0  00FC               	movwf	___xxtofl@arg+2
  2807  02F1  0871               	movf	___xxtofl@val+1,w
  2808  02F2  00FB               	movwf	___xxtofl@arg+1
  2809  02F3  0870               	movf	___xxtofl@val,w
  2810  02F4  00FA               	movwf	___xxtofl@arg
  2811  02F5                     l743:	
  2812  02F5  0873               	movf	___xxtofl@val+3,w
  2813  02F6  0472               	iorwf	___xxtofl@val+2,w
  2814  02F7  0471               	iorwf	___xxtofl@val+1,w
  2815  02F8  0470               	iorwf	___xxtofl@val,w
  2816  02F9  1D03               	skipz
  2817  02FA  2AFC               	goto	u1591
  2818  02FB  2AFD               	goto	u1590
  2819  02FC                     u1591:	
  2820  02FC  2B06               	goto	l1752
  2821  02FD                     u1590:	
  2822  02FD                     l1748:	
  2823  02FD  3000               	movlw	0
  2824  02FE  00F3               	movwf	?___xxtofl+3
  2825  02FF  3000               	movlw	0
  2826  0300  00F2               	movwf	?___xxtofl+2
  2827  0301  3000               	movlw	0
  2828  0302  00F1               	movwf	?___xxtofl+1
  2829  0303  3000               	movlw	0
  2830  0304  00F0               	movwf	?___xxtofl
  2831  0305  2B8C               	goto	l745
  2832  0306                     l1752:	
  2833  0306  3096               	movlw	150
  2834  0307  00F4               	movwf	??___xxtofl
  2835  0308  0874               	movf	??___xxtofl,w
  2836  0309  00F9               	movwf	___xxtofl@exp
  2837  030A  2B18               	goto	l1756
  2838  030B                     l1754:	
  2839  030B  3001               	movlw	1
  2840  030C  00F4               	movwf	??___xxtofl
  2841  030D  0874               	movf	??___xxtofl,w
  2842  030E  07F9               	addwf	___xxtofl@exp,f
  2843  030F  3001               	movlw	1
  2844  0310                     u1605:	
  2845  0310  1003               	clrc
  2846  0311  0CFD               	rrf	___xxtofl@arg+3,f
  2847  0312  0CFC               	rrf	___xxtofl@arg+2,f
  2848  0313  0CFB               	rrf	___xxtofl@arg+1,f
  2849  0314  0CFA               	rrf	___xxtofl@arg,f
  2850  0315  3EFF               	addlw	-1
  2851  0316  1D03               	skipz
  2852  0317  2B10               	goto	u1605
  2853  0318                     l1756:	
  2854  0318  30FE               	movlw	254
  2855  0319  057D               	andwf	___xxtofl@arg+3,w
  2856  031A  1D03               	btfss	3,2
  2857  031B  2B1D               	goto	u1611
  2858  031C  2B1E               	goto	u1610
  2859  031D                     u1611:	
  2860  031D  2B0B               	goto	l1754
  2861  031E                     u1610:	
  2862  031E  2B3A               	goto	l749
  2863  031F                     l1758:	
  2864  031F  3001               	movlw	1
  2865  0320  00F4               	movwf	??___xxtofl
  2866  0321  0874               	movf	??___xxtofl,w
  2867  0322  07F9               	addwf	___xxtofl@exp,f
  2868  0323                     l1760:	
  2869  0323  3001               	movlw	1
  2870  0324  07FA               	addwf	___xxtofl@arg,f
  2871  0325  3000               	movlw	0
  2872  0326  1803               	skipnc
  2873  0327  3001               	movlw	1
  2874  0328  07FB               	addwf	___xxtofl@arg+1,f
  2875  0329  3000               	movlw	0
  2876  032A  1803               	skipnc
  2877  032B  3001               	movlw	1
  2878  032C  07FC               	addwf	___xxtofl@arg+2,f
  2879  032D  3000               	movlw	0
  2880  032E  1803               	skipnc
  2881  032F  3001               	movlw	1
  2882  0330  07FD               	addwf	___xxtofl@arg+3,f
  2883  0331                     l1762:	
  2884  0331  3001               	movlw	1
  2885  0332                     u1625:	
  2886  0332  1003               	clrc
  2887  0333  0CFD               	rrf	___xxtofl@arg+3,f
  2888  0334  0CFC               	rrf	___xxtofl@arg+2,f
  2889  0335  0CFB               	rrf	___xxtofl@arg+1,f
  2890  0336  0CFA               	rrf	___xxtofl@arg,f
  2891  0337  3EFF               	addlw	-1
  2892  0338  1D03               	skipz
  2893  0339  2B32               	goto	u1625
  2894  033A                     l749:	
  2895  033A  30FF               	movlw	255
  2896  033B  057D               	andwf	___xxtofl@arg+3,w
  2897  033C  1D03               	btfss	3,2
  2898  033D  2B3F               	goto	u1631
  2899  033E  2B40               	goto	u1630
  2900  033F                     u1631:	
  2901  033F  2B1F               	goto	l1758
  2902  0340                     u1630:	
  2903  0340  2B4C               	goto	l1766
  2904  0341                     l1764:	
  2905  0341  3001               	movlw	1
  2906  0342  02F9               	subwf	___xxtofl@exp,f
  2907  0343  3001               	movlw	1
  2908  0344  00F4               	movwf	??___xxtofl
  2909  0345                     u1645:	
  2910  0345  1003               	clrc
  2911  0346  0DFA               	rlf	___xxtofl@arg,f
  2912  0347  0DFB               	rlf	___xxtofl@arg+1,f
  2913  0348  0DFC               	rlf	___xxtofl@arg+2,f
  2914  0349  0DFD               	rlf	___xxtofl@arg+3,f
  2915  034A  0BF4               	decfsz	??___xxtofl,f
  2916  034B  2B45               	goto	u1645
  2917  034C                     l1766:	
  2918  034C  1BFC               	btfsc	___xxtofl@arg+2,7
  2919  034D  2B4F               	goto	u1651
  2920  034E  2B50               	goto	u1650
  2921  034F                     u1651:	
  2922  034F  2B56               	goto	l756
  2923  0350                     u1650:	
  2924  0350                     l1768:	
  2925  0350  3002               	movlw	2
  2926  0351  0279               	subwf	___xxtofl@exp,w
  2927  0352  1803               	skipnc
  2928  0353  2B55               	goto	u1661
  2929  0354  2B56               	goto	u1660
  2930  0355                     u1661:	
  2931  0355  2B41               	goto	l1764
  2932  0356                     u1660:	
  2933  0356                     l756:	
  2934  0356  1879               	btfsc	___xxtofl@exp,0
  2935  0357  2B59               	goto	u1671
  2936  0358  2B5A               	goto	u1670
  2937  0359                     u1671:	
  2938  0359  2B62               	goto	l757
  2939  035A                     u1670:	
  2940  035A                     l1770:	
  2941  035A  30FF               	movlw	255
  2942  035B  05FA               	andwf	___xxtofl@arg,f
  2943  035C  30FF               	movlw	255
  2944  035D  05FB               	andwf	___xxtofl@arg+1,f
  2945  035E  307F               	movlw	127
  2946  035F  05FC               	andwf	___xxtofl@arg+2,f
  2947  0360  30FF               	movlw	255
  2948  0361  05FD               	andwf	___xxtofl@arg+3,f
  2949  0362                     l757:	
  2950  0362  1003               	clrc
  2951  0363  0CF9               	rrf	___xxtofl@exp,f
  2952  0364                     l1772:	
  2953  0364  0879               	movf	___xxtofl@exp,w
  2954  0365  00F4               	movwf	??___xxtofl
  2955  0366  01F5               	clrf	??___xxtofl+1
  2956  0367  01F6               	clrf	??___xxtofl+2
  2957  0368  01F7               	clrf	??___xxtofl+3
  2958  0369  3018               	movlw	24
  2959  036A                     u1685:	
  2960  036A  1003               	clrc
  2961  036B  0DF4               	rlf	??___xxtofl,f
  2962  036C  0DF5               	rlf	??___xxtofl+1,f
  2963  036D  0DF6               	rlf	??___xxtofl+2,f
  2964  036E  0DF7               	rlf	??___xxtofl+3,f
  2965  036F                     u1680:	
  2966  036F  3EFF               	addlw	-1
  2967  0370  1D03               	skipz
  2968  0371  2B6A               	goto	u1685
  2969  0372  0874               	movf	??___xxtofl,w
  2970  0373  04FA               	iorwf	___xxtofl@arg,f
  2971  0374  0875               	movf	??___xxtofl+1,w
  2972  0375  04FB               	iorwf	___xxtofl@arg+1,f
  2973  0376  0876               	movf	??___xxtofl+2,w
  2974  0377  04FC               	iorwf	___xxtofl@arg+2,f
  2975  0378  0877               	movf	??___xxtofl+3,w
  2976  0379  04FD               	iorwf	___xxtofl@arg+3,f
  2977  037A                     l1774:	
  2978  037A  0878               	movf	___xxtofl@sign,w
  2979  037B  1903               	btfsc	3,2
  2980  037C  2B7E               	goto	u1691
  2981  037D  2B7F               	goto	u1690
  2982  037E                     u1691:	
  2983  037E  2B84               	goto	l1780
  2984  037F                     u1690:	
  2985  037F                     l1776:	
  2986  037F  1FF3               	btfss	___xxtofl@val+3,7
  2987  0380  2B82               	goto	u1701
  2988  0381  2B83               	goto	u1700
  2989  0382                     u1701:	
  2990  0382  2B84               	goto	l1780
  2991  0383                     u1700:	
  2992  0383                     l1778:	
  2993  0383  17FD               	bsf	___xxtofl@arg+3,7
  2994  0384                     l1780:	
  2995  0384  087D               	movf	___xxtofl@arg+3,w
  2996  0385  00F3               	movwf	?___xxtofl+3
  2997  0386  087C               	movf	___xxtofl@arg+2,w
  2998  0387  00F2               	movwf	?___xxtofl+2
  2999  0388  087B               	movf	___xxtofl@arg+1,w
  3000  0389  00F1               	movwf	?___xxtofl+1
  3001  038A  087A               	movf	___xxtofl@arg,w
  3002  038B  00F0               	movwf	?___xxtofl
  3003  038C                     l745:	
  3004  038C  0008               	return
  3005  038D                     __end_of___xxtofl:	
  3006                           
  3007                           	psect	text16
  3008  0258                     __ptext16:	
  3009 ;; *************** function ___fltol *****************
  3010 ;; Defined at:
  3011 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/fltol.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  f1              4   26[BANK0 ] unsigned char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  exp1            1   36[BANK0 ] unsigned char 
  3016 ;;  sign1           1   35[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  4   26[BANK0 ] long 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1
  3026 ;;      Params:         0       4       0
  3027 ;;      Locals:         0       2       0
  3028 ;;      Temps:          0       5       0
  3029 ;;      Totals:         0      11       0
  3030 ;;Total ram usage:       11 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_main
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function ___fltol
  3041  0258                     ___fltol:	
  3042  0258                     l1562:	
  3043                           ;incstack = 0
  3044                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3045                           
  3046  0258  1003               	clrc
  3047  0259  1283               	bcf	3,5	;RP0=0, select bank0
  3048  025A  0D3C               	rlf	___fltol@f1+2,w
  3049  025B  0D3D               	rlf	___fltol@f1+3,w
  3050  025C  00BE               	movwf	??___fltol
  3051  025D  083E               	movf	??___fltol,w
  3052  025E  00C4               	movwf	___fltol@exp1
  3053  025F  0844               	movf	___fltol@exp1,w
  3054  0260  1D03               	btfss	3,2
  3055  0261  2A63               	goto	u1181
  3056  0262  2A64               	goto	u1180
  3057  0263                     u1181:	
  3058  0263  2A6D               	goto	l1568
  3059  0264                     u1180:	
  3060  0264                     l1564:	
  3061  0264  3000               	movlw	0
  3062  0265  00BD               	movwf	?___fltol+3
  3063  0266  3000               	movlw	0
  3064  0267  00BC               	movwf	?___fltol+2
  3065  0268  3000               	movlw	0
  3066  0269  00BB               	movwf	?___fltol+1
  3067  026A  3000               	movlw	0
  3068  026B  00BA               	movwf	?___fltol
  3069  026C  2AD2               	goto	l502
  3070  026D                     l1568:	
  3071  026D  083A               	movf	___fltol@f1,w
  3072  026E  00BE               	movwf	??___fltol
  3073  026F  083B               	movf	___fltol@f1+1,w
  3074  0270  00BF               	movwf	??___fltol+1
  3075  0271  083C               	movf	___fltol@f1+2,w
  3076  0272  00C0               	movwf	??___fltol+2
  3077  0273  083D               	movf	___fltol@f1+3,w
  3078  0274  00C1               	movwf	??___fltol+3
  3079  0275  301F               	movlw	31
  3080  0276                     u1195:	
  3081  0276  1003               	clrc
  3082  0277  0CC1               	rrf	??___fltol+3,f
  3083  0278  0CC0               	rrf	??___fltol+2,f
  3084  0279  0CBF               	rrf	??___fltol+1,f
  3085  027A  0CBE               	rrf	??___fltol,f
  3086  027B                     u1190:	
  3087  027B  3EFF               	addlw	-1
  3088  027C  1D03               	skipz
  3089  027D  2A76               	goto	u1195
  3090  027E  083E               	movf	??___fltol,w
  3091  027F  00C2               	movwf	??___fltol+4
  3092  0280  0842               	movf	??___fltol+4,w
  3093  0281  00C3               	movwf	___fltol@sign1
  3094  0282                     l1570:	
  3095  0282  17BC               	bsf	___fltol@f1+2,7
  3096  0283                     l1572:	
  3097  0283  30FF               	movlw	255
  3098  0284  05BA               	andwf	___fltol@f1,f
  3099  0285  30FF               	movlw	255
  3100  0286  05BB               	andwf	___fltol@f1+1,f
  3101  0287  30FF               	movlw	255
  3102  0288  05BC               	andwf	___fltol@f1+2,f
  3103  0289  3000               	movlw	0
  3104  028A  05BD               	andwf	___fltol@f1+3,f
  3105  028B                     l1574:	
  3106  028B  3096               	movlw	150
  3107  028C  02C4               	subwf	___fltol@exp1,f
  3108  028D                     l1576:	
  3109  028D  1FC4               	btfss	___fltol@exp1,7
  3110  028E  2A90               	goto	u1201
  3111  028F  2A91               	goto	u1200
  3112  0290                     u1201:	
  3113  0290  2AAB               	goto	l1586
  3114  0291                     u1200:	
  3115  0291                     l1578:	
  3116  0291  0844               	movf	___fltol@exp1,w
  3117  0292  3A80               	xorlw	128
  3118  0293  3E97               	addlw	151
  3119  0294  1803               	skipnc
  3120  0295  2A97               	goto	u1211
  3121  0296  2A98               	goto	u1210
  3122  0297                     u1211:	
  3123  0297  2A99               	goto	l1584
  3124  0298                     u1210:	
  3125  0298  2A64               	goto	l1564
  3126  0299                     l1584:	
  3127  0299  3001               	movlw	1
  3128  029A                     u1225:	
  3129  029A  1003               	clrc
  3130  029B  0CBD               	rrf	___fltol@f1+3,f
  3131  029C  0CBC               	rrf	___fltol@f1+2,f
  3132  029D  0CBB               	rrf	___fltol@f1+1,f
  3133  029E  0CBA               	rrf	___fltol@f1,f
  3134  029F  3EFF               	addlw	-1
  3135  02A0  1D03               	skipz
  3136  02A1  2A9A               	goto	u1225
  3137  02A2  3001               	movlw	1
  3138  02A3  00BE               	movwf	??___fltol
  3139  02A4  083E               	movf	??___fltol,w
  3140  02A5  07C4               	addwf	___fltol@exp1,f
  3141  02A6  1D03               	btfss	3,2
  3142  02A7  2AA9               	goto	u1231
  3143  02A8  2AAA               	goto	u1230
  3144  02A9                     u1231:	
  3145  02A9  2A99               	goto	l1584
  3146  02AA                     u1230:	
  3147  02AA  2AC2               	goto	l1594
  3148  02AB                     l1586:	
  3149  02AB  3020               	movlw	32
  3150  02AC  0244               	subwf	___fltol@exp1,w
  3151  02AD  1C03               	skipc
  3152  02AE  2AB0               	goto	u1241
  3153  02AF  2AB1               	goto	u1240
  3154  02B0                     u1241:	
  3155  02B0  2ABD               	goto	l509
  3156  02B1                     u1240:	
  3157  02B1  2A64               	goto	l1564
  3158  02B2                     l1592:	
  3159  02B2  3001               	movlw	1
  3160  02B3  00BE               	movwf	??___fltol
  3161  02B4                     u1255:	
  3162  02B4  1003               	clrc
  3163  02B5  0DBA               	rlf	___fltol@f1,f
  3164  02B6  0DBB               	rlf	___fltol@f1+1,f
  3165  02B7  0DBC               	rlf	___fltol@f1+2,f
  3166  02B8  0DBD               	rlf	___fltol@f1+3,f
  3167  02B9  0BBE               	decfsz	??___fltol,f
  3168  02BA  2AB4               	goto	u1255
  3169  02BB  3001               	movlw	1
  3170  02BC  02C4               	subwf	___fltol@exp1,f
  3171  02BD                     l509:	
  3172  02BD  0844               	movf	___fltol@exp1,w
  3173  02BE  1D03               	btfss	3,2
  3174  02BF  2AC1               	goto	u1261
  3175  02C0  2AC2               	goto	u1260
  3176  02C1                     u1261:	
  3177  02C1  2AB2               	goto	l1592
  3178  02C2                     u1260:	
  3179  02C2                     l1594:	
  3180  02C2  0843               	movf	___fltol@sign1,w
  3181  02C3  1903               	btfsc	3,2
  3182  02C4  2AC6               	goto	u1271
  3183  02C5  2AC7               	goto	u1270
  3184  02C6                     u1271:	
  3185  02C6  2AD2               	goto	l512
  3186  02C7                     u1270:	
  3187  02C7                     l1596:	
  3188  02C7  09BA               	comf	___fltol@f1,f
  3189  02C8  09BB               	comf	___fltol@f1+1,f
  3190  02C9  09BC               	comf	___fltol@f1+2,f
  3191  02CA  09BD               	comf	___fltol@f1+3,f
  3192  02CB  0ABA               	incf	___fltol@f1,f
  3193  02CC  1903               	skipnz
  3194  02CD  0ABB               	incf	___fltol@f1+1,f
  3195  02CE  1903               	skipnz
  3196  02CF  0ABC               	incf	___fltol@f1+2,f
  3197  02D0  1903               	skipnz
  3198  02D1  0ABD               	incf	___fltol@f1+3,f
  3199  02D2                     l512:	
  3200  02D2                     l502:	
  3201  02D2  0008               	return
  3202  02D3                     __end_of___fltol:	
  3203                           
  3204                           	psect	text17
  3205  061D                     __ptext17:	
  3206 ;; *************** function ___fldiv *****************
  3207 ;; Defined at:
  3208 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/sprcdiv.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  a               4    0[BANK0 ] long 
  3211 ;;  b               4    4[BANK0 ] long 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  grs             4   20[BANK0 ] unsigned long 
  3214 ;;  rem             4   13[BANK0 ] unsigned long 
  3215 ;;  new_exp         2   18[BANK0 ] int 
  3216 ;;  aexp            1   25[BANK0 ] unsigned char 
  3217 ;;  bexp            1   24[BANK0 ] unsigned char 
  3218 ;;  sign            1   17[BANK0 ] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  4    0[BANK0 ] unsigned char 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, btemp+1
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1
  3228 ;;      Params:         0       8       0
  3229 ;;      Locals:         0      13       0
  3230 ;;      Temps:          0       5       0
  3231 ;;      Totals:         0      26       0
  3232 ;;Total ram usage:       26 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		_main
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function ___fldiv
  3243  061D                     ___fldiv:	
  3244  061D                     l1598:	
  3245                           ;incstack = 0
  3246                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3247                           
  3248  061D  1283               	bcf	3,5	;RP0=0, select bank0
  3249  061E  0827               	movf	___fldiv@b+3,w
  3250  061F  3980               	andlw	128
  3251  0620  00A8               	movwf	??___fldiv
  3252  0621  0828               	movf	??___fldiv,w
  3253  0622  00B1               	movwf	___fldiv@sign
  3254  0623                     l1600:	
  3255  0623  0827               	movf	___fldiv@b+3,w
  3256  0624  00A8               	movwf	??___fldiv
  3257  0625  0728               	addwf	??___fldiv,w
  3258  0626  00A9               	movwf	??___fldiv+1
  3259  0627  0829               	movf	??___fldiv+1,w
  3260  0628  00B8               	movwf	___fldiv@bexp
  3261  0629                     l1602:	
  3262  0629  1FA6               	btfss	___fldiv@b+2,7
  3263  062A  2E2C               	goto	u1281
  3264  062B  2E2D               	goto	u1280
  3265  062C                     u1281:	
  3266  062C  2E2E               	goto	l1606
  3267  062D                     u1280:	
  3268  062D                     l1604:	
  3269  062D  1438               	bsf	___fldiv@bexp,0
  3270  062E                     l1606:	
  3271  062E  0838               	movf	___fldiv@bexp,w
  3272  062F  1903               	btfsc	3,2
  3273  0630  2E32               	goto	u1291
  3274  0631  2E33               	goto	u1290
  3275  0632                     u1291:	
  3276  0632  2E43               	goto	l1616
  3277  0633                     u1290:	
  3278  0633                     l1608:	
  3279  0633  0A38               	incf	___fldiv@bexp,w
  3280  0634  1D03               	btfss	3,2
  3281  0635  2E37               	goto	u1301
  3282  0636  2E38               	goto	u1300
  3283  0637                     u1301:	
  3284  0637  2E40               	goto	l1612
  3285  0638                     u1300:	
  3286  0638                     l1610:	
  3287  0638  3000               	movlw	0
  3288  0639  00A7               	movwf	___fldiv@b+3
  3289  063A  3000               	movlw	0
  3290  063B  00A6               	movwf	___fldiv@b+2
  3291  063C  3000               	movlw	0
  3292  063D  00A5               	movwf	___fldiv@b+1
  3293  063E  3000               	movlw	0
  3294  063F  00A4               	movwf	___fldiv@b
  3295  0640                     l1612:	
  3296  0640  17A6               	bsf	___fldiv@b+2,7
  3297  0641                     l1614:	
  3298  0641  01A7               	clrf	___fldiv@b+3
  3299  0642  2E4B               	goto	l1618
  3300  0643                     l1616:	
  3301  0643  3000               	movlw	0
  3302  0644  00A7               	movwf	___fldiv@b+3
  3303  0645  3000               	movlw	0
  3304  0646  00A6               	movwf	___fldiv@b+2
  3305  0647  3000               	movlw	0
  3306  0648  00A5               	movwf	___fldiv@b+1
  3307  0649  3000               	movlw	0
  3308  064A  00A4               	movwf	___fldiv@b
  3309  064B                     l1618:	
  3310  064B  0823               	movf	___fldiv@a+3,w
  3311  064C  3980               	andlw	128
  3312  064D  00A8               	movwf	??___fldiv
  3313  064E  0828               	movf	??___fldiv,w
  3314  064F  06B1               	xorwf	___fldiv@sign,f
  3315  0650                     l1620:	
  3316  0650  0823               	movf	___fldiv@a+3,w
  3317  0651  00A8               	movwf	??___fldiv
  3318  0652  0728               	addwf	??___fldiv,w
  3319  0653  00A9               	movwf	??___fldiv+1
  3320  0654  0829               	movf	??___fldiv+1,w
  3321  0655  00B9               	movwf	___fldiv@aexp
  3322  0656                     l1622:	
  3323  0656  1FA2               	btfss	___fldiv@a+2,7
  3324  0657  2E59               	goto	u1311
  3325  0658  2E5A               	goto	u1310
  3326  0659                     u1311:	
  3327  0659  2E5B               	goto	l1626
  3328  065A                     u1310:	
  3329  065A                     l1624:	
  3330  065A  1439               	bsf	___fldiv@aexp,0
  3331  065B                     l1626:	
  3332  065B  0839               	movf	___fldiv@aexp,w
  3333  065C  1903               	btfsc	3,2
  3334  065D  2E5F               	goto	u1321
  3335  065E  2E60               	goto	u1320
  3336  065F                     u1321:	
  3337  065F  2E70               	goto	l1636
  3338  0660                     u1320:	
  3339  0660                     l1628:	
  3340  0660  0A39               	incf	___fldiv@aexp,w
  3341  0661  1D03               	btfss	3,2
  3342  0662  2E64               	goto	u1331
  3343  0663  2E65               	goto	u1330
  3344  0664                     u1331:	
  3345  0664  2E6D               	goto	l1632
  3346  0665                     u1330:	
  3347  0665                     l1630:	
  3348  0665  3000               	movlw	0
  3349  0666  00A3               	movwf	___fldiv@a+3
  3350  0667  3000               	movlw	0
  3351  0668  00A2               	movwf	___fldiv@a+2
  3352  0669  3000               	movlw	0
  3353  066A  00A1               	movwf	___fldiv@a+1
  3354  066B  3000               	movlw	0
  3355  066C  00A0               	movwf	___fldiv@a
  3356  066D                     l1632:	
  3357  066D  17A2               	bsf	___fldiv@a+2,7
  3358  066E                     l1634:	
  3359  066E  01A3               	clrf	___fldiv@a+3
  3360  066F  2E78               	goto	l665
  3361  0670                     l1636:	
  3362  0670  3000               	movlw	0
  3363  0671  00A3               	movwf	___fldiv@a+3
  3364  0672  3000               	movlw	0
  3365  0673  00A2               	movwf	___fldiv@a+2
  3366  0674  3000               	movlw	0
  3367  0675  00A1               	movwf	___fldiv@a+1
  3368  0676  3000               	movlw	0
  3369  0677  00A0               	movwf	___fldiv@a
  3370  0678                     l665:	
  3371  0678  0823               	movf	___fldiv@a+3,w
  3372  0679  0422               	iorwf	___fldiv@a+2,w
  3373  067A  0421               	iorwf	___fldiv@a+1,w
  3374  067B  0420               	iorwf	___fldiv@a,w
  3375  067C  1D03               	skipz
  3376  067D  2E7F               	goto	u1341
  3377  067E  2E80               	goto	u1340
  3378  067F                     u1341:	
  3379  067F  2E99               	goto	l1646
  3380  0680                     u1340:	
  3381  0680                     l1638:	
  3382  0680  3000               	movlw	0
  3383  0681  00A7               	movwf	___fldiv@b+3
  3384  0682  3000               	movlw	0
  3385  0683  00A6               	movwf	___fldiv@b+2
  3386  0684  3000               	movlw	0
  3387  0685  00A5               	movwf	___fldiv@b+1
  3388  0686  3000               	movlw	0
  3389  0687  00A4               	movwf	___fldiv@b
  3390  0688  3080               	movlw	128
  3391  0689  04A6               	iorwf	___fldiv@b+2,f
  3392  068A  307F               	movlw	127
  3393  068B  04A7               	iorwf	___fldiv@b+3,f
  3394  068C                     l1640:	
  3395  068C  0831               	movf	___fldiv@sign,w
  3396  068D  00A8               	movwf	??___fldiv
  3397  068E  0828               	movf	??___fldiv,w
  3398  068F  04A7               	iorwf	___fldiv@b+3,f
  3399  0690                     l1642:	
  3400  0690  0827               	movf	___fldiv@b+3,w
  3401  0691  00A3               	movwf	?___fldiv+3
  3402  0692  0826               	movf	___fldiv@b+2,w
  3403  0693  00A2               	movwf	?___fldiv+2
  3404  0694  0825               	movf	___fldiv@b+1,w
  3405  0695  00A1               	movwf	?___fldiv+1
  3406  0696  0824               	movf	___fldiv@b,w
  3407  0697  00A0               	movwf	?___fldiv
  3408  0698  2FF4               	goto	l667
  3409  0699                     l1646:	
  3410  0699  0838               	movf	___fldiv@bexp,w
  3411  069A  1D03               	btfss	3,2
  3412  069B  2E9D               	goto	u1351
  3413  069C  2E9E               	goto	u1350
  3414  069D                     u1351:	
  3415  069D  2EA7               	goto	l1652
  3416  069E                     u1350:	
  3417  069E                     l1648:	
  3418  069E  3000               	movlw	0
  3419  069F  00A3               	movwf	?___fldiv+3
  3420  06A0  3000               	movlw	0
  3421  06A1  00A2               	movwf	?___fldiv+2
  3422  06A2  3000               	movlw	0
  3423  06A3  00A1               	movwf	?___fldiv+1
  3424  06A4  3000               	movlw	0
  3425  06A5  00A0               	movwf	?___fldiv
  3426  06A6  2FF4               	goto	l667
  3427  06A7                     l1652:	
  3428  06A7  0838               	movf	___fldiv@bexp,w
  3429  06A8  00A8               	movwf	??___fldiv
  3430  06A9  01A9               	clrf	??___fldiv+1
  3431  06AA  0829               	movf	??___fldiv+1,w
  3432  06AB  00AB               	movwf	??___fldiv+3
  3433  06AC  0839               	movf	___fldiv@aexp,w
  3434  06AD  0228               	subwf	??___fldiv,w
  3435  06AE  00AA               	movwf	??___fldiv+2
  3436  06AF  1C03               	skipc
  3437  06B0  03AB               	decf	??___fldiv+3,f
  3438  06B1  082A               	movf	??___fldiv+2,w
  3439  06B2  3E7F               	addlw	127
  3440  06B3  00B2               	movwf	___fldiv@new_exp
  3441  06B4  082B               	movf	??___fldiv+3,w
  3442  06B5  1803               	skipnc
  3443  06B6  3E01               	addlw	1
  3444  06B7  3E00               	addlw	0
  3445  06B8  00B3               	movwf	___fldiv@new_exp+1
  3446  06B9                     l1654:	
  3447  06B9  0827               	movf	___fldiv@b+3,w
  3448  06BA  00B0               	movwf	___fldiv@rem+3
  3449  06BB  0826               	movf	___fldiv@b+2,w
  3450  06BC  00AF               	movwf	___fldiv@rem+2
  3451  06BD  0825               	movf	___fldiv@b+1,w
  3452  06BE  00AE               	movwf	___fldiv@rem+1
  3453  06BF  0824               	movf	___fldiv@b,w
  3454  06C0  00AD               	movwf	___fldiv@rem
  3455  06C1                     l1656:	
  3456  06C1  3000               	movlw	0
  3457  06C2  00A7               	movwf	___fldiv@b+3
  3458  06C3  3000               	movlw	0
  3459  06C4  00A6               	movwf	___fldiv@b+2
  3460  06C5  3000               	movlw	0
  3461  06C6  00A5               	movwf	___fldiv@b+1
  3462  06C7  3000               	movlw	0
  3463  06C8  00A4               	movwf	___fldiv@b
  3464  06C9                     l1658:	
  3465  06C9  3000               	movlw	0
  3466  06CA  00B7               	movwf	___fldiv@grs+3
  3467  06CB  3000               	movlw	0
  3468  06CC  00B6               	movwf	___fldiv@grs+2
  3469  06CD  3000               	movlw	0
  3470  06CE  00B5               	movwf	___fldiv@grs+1
  3471  06CF  3000               	movlw	0
  3472  06D0  00B4               	movwf	___fldiv@grs
  3473  06D1                     l1660:	
  3474  06D1  01B9               	clrf	___fldiv@aexp
  3475  06D2  2F1D               	goto	l1680
  3476  06D3                     l1662:	
  3477  06D3  0839               	movf	___fldiv@aexp,w
  3478  06D4  1903               	btfsc	3,2
  3479  06D5  2ED7               	goto	u1361
  3480  06D6  2ED8               	goto	u1360
  3481  06D7                     u1361:	
  3482  06D7  2EF8               	goto	l1672
  3483  06D8                     u1360:	
  3484  06D8                     l1664:	
  3485  06D8  3001               	movlw	1
  3486  06D9  00A8               	movwf	??___fldiv
  3487  06DA                     u1375:	
  3488  06DA  1003               	clrc
  3489  06DB  0DAD               	rlf	___fldiv@rem,f
  3490  06DC  0DAE               	rlf	___fldiv@rem+1,f
  3491  06DD  0DAF               	rlf	___fldiv@rem+2,f
  3492  06DE  0DB0               	rlf	___fldiv@rem+3,f
  3493  06DF  0BA8               	decfsz	??___fldiv,f
  3494  06E0  2EDA               	goto	u1375
  3495  06E1  3001               	movlw	1
  3496  06E2  00A8               	movwf	??___fldiv
  3497  06E3                     u1385:	
  3498  06E3  1003               	clrc
  3499  06E4  0DA4               	rlf	___fldiv@b,f
  3500  06E5  0DA5               	rlf	___fldiv@b+1,f
  3501  06E6  0DA6               	rlf	___fldiv@b+2,f
  3502  06E7  0DA7               	rlf	___fldiv@b+3,f
  3503  06E8  0BA8               	decfsz	??___fldiv,f
  3504  06E9  2EE3               	goto	u1385
  3505  06EA                     l1666:	
  3506  06EA  1FB7               	btfss	___fldiv@grs+3,7
  3507  06EB  2EED               	goto	u1391
  3508  06EC  2EEE               	goto	u1390
  3509  06ED                     u1391:	
  3510  06ED  2EEF               	goto	l1670
  3511  06EE                     u1390:	
  3512  06EE                     l1668:	
  3513  06EE  1424               	bsf	___fldiv@b,0
  3514  06EF                     l1670:	
  3515  06EF  3001               	movlw	1
  3516  06F0  00A8               	movwf	??___fldiv
  3517  06F1                     u1405:	
  3518  06F1  1003               	clrc
  3519  06F2  0DB4               	rlf	___fldiv@grs,f
  3520  06F3  0DB5               	rlf	___fldiv@grs+1,f
  3521  06F4  0DB6               	rlf	___fldiv@grs+2,f
  3522  06F5  0DB7               	rlf	___fldiv@grs+3,f
  3523  06F6  0BA8               	decfsz	??___fldiv,f
  3524  06F7  2EF1               	goto	u1405
  3525  06F8                     l1672:	
  3526  06F8  0823               	movf	___fldiv@a+3,w
  3527  06F9  0230               	subwf	___fldiv@rem+3,w
  3528  06FA  1D03               	skipz
  3529  06FB  2F06               	goto	u1415
  3530  06FC  0822               	movf	___fldiv@a+2,w
  3531  06FD  022F               	subwf	___fldiv@rem+2,w
  3532  06FE  1D03               	skipz
  3533  06FF  2F06               	goto	u1415
  3534  0700  0821               	movf	___fldiv@a+1,w
  3535  0701  022E               	subwf	___fldiv@rem+1,w
  3536  0702  1D03               	skipz
  3537  0703  2F06               	goto	u1415
  3538  0704  0820               	movf	___fldiv@a,w
  3539  0705  022D               	subwf	___fldiv@rem,w
  3540  0706                     u1415:	
  3541  0706  1C03               	skipc
  3542  0707  2F09               	goto	u1411
  3543  0708  2F0A               	goto	u1410
  3544  0709                     u1411:	
  3545  0709  2F19               	goto	l1678
  3546  070A                     u1410:	
  3547  070A                     l1674:	
  3548  070A  1737               	bsf	___fldiv@grs+3,6
  3549  070B                     l1676:	
  3550  070B  0820               	movf	___fldiv@a,w
  3551  070C  02AD               	subwf	___fldiv@rem,f
  3552  070D  0821               	movf	___fldiv@a+1,w
  3553  070E  1C03               	skipc
  3554  070F  0F21               	incfsz	___fldiv@a+1,w
  3555  0710  02AE               	subwf	___fldiv@rem+1,f
  3556  0711  0822               	movf	___fldiv@a+2,w
  3557  0712  1C03               	skipc
  3558  0713  0F22               	incfsz	___fldiv@a+2,w
  3559  0714  02AF               	subwf	___fldiv@rem+2,f
  3560  0715  0823               	movf	___fldiv@a+3,w
  3561  0716  1C03               	skipc
  3562  0717  0F23               	incfsz	___fldiv@a+3,w
  3563  0718  02B0               	subwf	___fldiv@rem+3,f
  3564  0719                     l1678:	
  3565  0719  3001               	movlw	1
  3566  071A  00A8               	movwf	??___fldiv
  3567  071B  0828               	movf	??___fldiv,w
  3568  071C  07B9               	addwf	___fldiv@aexp,f
  3569  071D                     l1680:	
  3570  071D  301A               	movlw	26
  3571  071E  0239               	subwf	___fldiv@aexp,w
  3572  071F  1C03               	skipc
  3573  0720  2F22               	goto	u1421
  3574  0721  2F23               	goto	u1420
  3575  0722                     u1421:	
  3576  0722  2ED3               	goto	l1662
  3577  0723                     u1420:	
  3578  0723                     l1682:	
  3579  0723  0830               	movf	___fldiv@rem+3,w
  3580  0724  042F               	iorwf	___fldiv@rem+2,w
  3581  0725  042E               	iorwf	___fldiv@rem+1,w
  3582  0726  042D               	iorwf	___fldiv@rem,w
  3583  0727  1903               	skipnz
  3584  0728  2F2A               	goto	u1431
  3585  0729  2F2B               	goto	u1430
  3586  072A                     u1431:	
  3587  072A  2F4A               	goto	l1696
  3588  072B                     u1430:	
  3589  072B                     l1684:	
  3590  072B  1434               	bsf	___fldiv@grs,0
  3591  072C  2F4A               	goto	l1696
  3592  072D                     l1686:	
  3593  072D  3001               	movlw	1
  3594  072E  00A8               	movwf	??___fldiv
  3595  072F                     u1445:	
  3596  072F  1003               	clrc
  3597  0730  0DA4               	rlf	___fldiv@b,f
  3598  0731  0DA5               	rlf	___fldiv@b+1,f
  3599  0732  0DA6               	rlf	___fldiv@b+2,f
  3600  0733  0DA7               	rlf	___fldiv@b+3,f
  3601  0734  0BA8               	decfsz	??___fldiv,f
  3602  0735  2F2F               	goto	u1445
  3603  0736                     l1688:	
  3604  0736  1FB7               	btfss	___fldiv@grs+3,7
  3605  0737  2F39               	goto	u1451
  3606  0738  2F3A               	goto	u1450
  3607  0739                     u1451:	
  3608  0739  2F3B               	goto	l1692
  3609  073A                     u1450:	
  3610  073A                     l1690:	
  3611  073A  1424               	bsf	___fldiv@b,0
  3612  073B                     l1692:	
  3613  073B  3001               	movlw	1
  3614  073C  00A8               	movwf	??___fldiv
  3615  073D                     u1465:	
  3616  073D  1003               	clrc
  3617  073E  0DB4               	rlf	___fldiv@grs,f
  3618  073F  0DB5               	rlf	___fldiv@grs+1,f
  3619  0740  0DB6               	rlf	___fldiv@grs+2,f
  3620  0741  0DB7               	rlf	___fldiv@grs+3,f
  3621  0742  0BA8               	decfsz	??___fldiv,f
  3622  0743  2F3D               	goto	u1465
  3623  0744                     l1694:	
  3624  0744  30FF               	movlw	255
  3625  0745  07B2               	addwf	___fldiv@new_exp,f
  3626  0746  1803               	skipnc
  3627  0747  0AB3               	incf	___fldiv@new_exp+1,f
  3628  0748  30FF               	movlw	255
  3629  0749  07B3               	addwf	___fldiv@new_exp+1,f
  3630  074A                     l1696:	
  3631  074A  1FA6               	btfss	___fldiv@b+2,7
  3632  074B  2F4D               	goto	u1471
  3633  074C  2F4E               	goto	u1470
  3634  074D                     u1471:	
  3635  074D  2F2D               	goto	l1686
  3636  074E                     u1470:	
  3637  074E                     l1698:	
  3638  074E  01B9               	clrf	___fldiv@aexp
  3639  074F                     l1700:	
  3640  074F  1FB7               	btfss	___fldiv@grs+3,7
  3641  0750  2F52               	goto	u1481
  3642  0751  2F53               	goto	u1480
  3643  0752                     u1481:	
  3644  0752  2F6F               	goto	l1708
  3645  0753                     u1480:	
  3646  0753                     l1702:	
  3647  0753  30FF               	movlw	255
  3648  0754  0534               	andwf	___fldiv@grs,w
  3649  0755  00A8               	movwf	??___fldiv
  3650  0756  30FF               	movlw	255
  3651  0757  0535               	andwf	___fldiv@grs+1,w
  3652  0758  00A9               	movwf	??___fldiv+1
  3653  0759  30FF               	movlw	255
  3654  075A  0536               	andwf	___fldiv@grs+2,w
  3655  075B  00AA               	movwf	??___fldiv+2
  3656  075C  307F               	movlw	127
  3657  075D  0537               	andwf	___fldiv@grs+3,w
  3658  075E  00AB               	movwf	??___fldiv+3
  3659  075F  082B               	movf	??___fldiv+3,w
  3660  0760  042A               	iorwf	??___fldiv+2,w
  3661  0761  0429               	iorwf	??___fldiv+1,w
  3662  0762  0428               	iorwf	??___fldiv,w
  3663  0763  1903               	skipnz
  3664  0764  2F66               	goto	u1491
  3665  0765  2F67               	goto	u1490
  3666  0766                     u1491:	
  3667  0766  2F6A               	goto	l681
  3668  0767                     u1490:	
  3669  0767                     l1704:	
  3670  0767  01B9               	clrf	___fldiv@aexp
  3671  0768  0AB9               	incf	___fldiv@aexp,f
  3672  0769  2F6F               	goto	l1708
  3673  076A                     l681:	
  3674  076A  1C24               	btfss	___fldiv@b,0
  3675  076B  2F6D               	goto	u1501
  3676  076C  2F6E               	goto	u1500
  3677  076D                     u1501:	
  3678  076D  2F6F               	goto	l1708
  3679  076E                     u1500:	
  3680  076E  2F67               	goto	l1704
  3681  076F                     l1708:	
  3682  076F  0839               	movf	___fldiv@aexp,w
  3683  0770  1903               	btfsc	3,2
  3684  0771  2F73               	goto	u1511
  3685  0772  2F74               	goto	u1510
  3686  0773                     u1511:	
  3687  0773  2FA5               	goto	l1718
  3688  0774                     u1510:	
  3689  0774                     l1710:	
  3690  0774  3001               	movlw	1
  3691  0775  07A4               	addwf	___fldiv@b,f
  3692  0776  3000               	movlw	0
  3693  0777  1803               	skipnc
  3694  0778  3001               	movlw	1
  3695  0779  07A5               	addwf	___fldiv@b+1,f
  3696  077A  3000               	movlw	0
  3697  077B  1803               	skipnc
  3698  077C  3001               	movlw	1
  3699  077D  07A6               	addwf	___fldiv@b+2,f
  3700  077E  3000               	movlw	0
  3701  077F  1803               	skipnc
  3702  0780  3001               	movlw	1
  3703  0781  07A7               	addwf	___fldiv@b+3,f
  3704  0782                     l1712:	
  3705  0782  1C27               	btfss	___fldiv@b+3,0
  3706  0783  2F85               	goto	u1521
  3707  0784  2F86               	goto	u1520
  3708  0785                     u1521:	
  3709  0785  2FA5               	goto	l1718
  3710  0786                     u1520:	
  3711  0786                     l1714:	
  3712  0786  0824               	movf	___fldiv@b,w
  3713  0787  00A8               	movwf	??___fldiv
  3714  0788  0825               	movf	___fldiv@b+1,w
  3715  0789  00A9               	movwf	??___fldiv+1
  3716  078A  0826               	movf	___fldiv@b+2,w
  3717  078B  00AA               	movwf	??___fldiv+2
  3718  078C  0827               	movf	___fldiv@b+3,w
  3719  078D  00AB               	movwf	??___fldiv+3
  3720  078E  3001               	movlw	1
  3721  078F  00AC               	movwf	??___fldiv+4
  3722  0790                     u1535:	
  3723  0790  0D2B               	rlf	??___fldiv+3,w
  3724  0791  0CAB               	rrf	??___fldiv+3,f
  3725  0792  0CAA               	rrf	??___fldiv+2,f
  3726  0793  0CA9               	rrf	??___fldiv+1,f
  3727  0794  0CA8               	rrf	??___fldiv,f
  3728  0795                     u1530:	
  3729  0795  0BAC               	decfsz	??___fldiv+4,f
  3730  0796  2F90               	goto	u1535
  3731  0797  082B               	movf	??___fldiv+3,w
  3732  0798  00A7               	movwf	___fldiv@b+3
  3733  0799  082A               	movf	??___fldiv+2,w
  3734  079A  00A6               	movwf	___fldiv@b+2
  3735  079B  0829               	movf	??___fldiv+1,w
  3736  079C  00A5               	movwf	___fldiv@b+1
  3737  079D  0828               	movf	??___fldiv,w
  3738  079E  00A4               	movwf	___fldiv@b
  3739  079F                     l1716:	
  3740  079F  3001               	movlw	1
  3741  07A0  07B2               	addwf	___fldiv@new_exp,f
  3742  07A1  1803               	skipnc
  3743  07A2  0AB3               	incf	___fldiv@new_exp+1,f
  3744  07A3  3000               	movlw	0
  3745  07A4  07B3               	addwf	___fldiv@new_exp+1,f
  3746  07A5                     l1718:	
  3747  07A5  0833               	movf	___fldiv@new_exp+1,w
  3748  07A6  3A80               	xorlw	128
  3749  07A7  00FF               	movwf	btemp+1
  3750  07A8  3080               	movlw	128
  3751  07A9  027F               	subwf	btemp+1,w
  3752  07AA  1D03               	skipz
  3753  07AB  2FAE               	goto	u1545
  3754  07AC  30FF               	movlw	255
  3755  07AD  0232               	subwf	___fldiv@new_exp,w
  3756  07AE                     u1545:	
  3757  07AE  1C03               	skipc
  3758  07AF  2FB1               	goto	u1541
  3759  07B0  2FB2               	goto	u1540
  3760  07B1                     u1541:	
  3761  07B1  2FBF               	goto	l1722
  3762  07B2                     u1540:	
  3763  07B2                     l1720:	
  3764  07B2  30FF               	movlw	255
  3765  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  3766  07B4  00B2               	movwf	___fldiv@new_exp
  3767  07B5  3000               	movlw	0
  3768  07B6  00B3               	movwf	___fldiv@new_exp+1
  3769  07B7  3000               	movlw	0
  3770  07B8  00A7               	movwf	___fldiv@b+3
  3771  07B9  3000               	movlw	0
  3772  07BA  00A6               	movwf	___fldiv@b+2
  3773  07BB  3000               	movlw	0
  3774  07BC  00A5               	movwf	___fldiv@b+1
  3775  07BD  3000               	movlw	0
  3776  07BE  00A4               	movwf	___fldiv@b
  3777  07BF                     l1722:	
  3778  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  3779  07C0  0833               	movf	___fldiv@new_exp+1,w
  3780  07C1  3A80               	xorlw	128
  3781  07C2  00FF               	movwf	btemp+1
  3782  07C3  3080               	movlw	128
  3783  07C4  027F               	subwf	btemp+1,w
  3784  07C5  1D03               	skipz
  3785  07C6  2FC9               	goto	u1555
  3786  07C7  3001               	movlw	1
  3787  07C8  0232               	subwf	___fldiv@new_exp,w
  3788  07C9                     u1555:	
  3789  07C9  1803               	skipnc
  3790  07CA  2FCC               	goto	u1551
  3791  07CB  2FCD               	goto	u1550
  3792  07CC                     u1551:	
  3793  07CC  2FD9               	goto	l687
  3794  07CD                     u1550:	
  3795  07CD                     l1724:	
  3796  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  3797  07CE  01B2               	clrf	___fldiv@new_exp
  3798  07CF  01B3               	clrf	___fldiv@new_exp+1
  3799  07D0                     l1726:	
  3800  07D0  3000               	movlw	0
  3801  07D1  00A7               	movwf	___fldiv@b+3
  3802  07D2  3000               	movlw	0
  3803  07D3  00A6               	movwf	___fldiv@b+2
  3804  07D4  3000               	movlw	0
  3805  07D5  00A5               	movwf	___fldiv@b+1
  3806  07D6  3000               	movlw	0
  3807  07D7  00A4               	movwf	___fldiv@b
  3808  07D8                     l1728:	
  3809  07D8  01B1               	clrf	___fldiv@sign
  3810  07D9                     l687:	
  3811  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  3812  07DA  0832               	movf	___fldiv@new_exp,w
  3813  07DB  00A8               	movwf	??___fldiv
  3814  07DC  0828               	movf	??___fldiv,w
  3815  07DD  00B8               	movwf	___fldiv@bexp
  3816  07DE                     l1730:	
  3817  07DE  1C38               	btfss	___fldiv@bexp,0
  3818  07DF  2FE1               	goto	u1561
  3819  07E0  2FE2               	goto	u1560
  3820  07E1                     u1561:	
  3821  07E1  2FE4               	goto	l1734
  3822  07E2                     u1560:	
  3823  07E2                     l1732:	
  3824  07E2  17A6               	bsf	___fldiv@b+2,7
  3825  07E3  2FE8               	goto	l689
  3826  07E4                     l1734:	
  3827  07E4  307F               	movlw	127
  3828  07E5  00A8               	movwf	??___fldiv
  3829  07E6  0828               	movf	??___fldiv,w
  3830  07E7  05A6               	andwf	___fldiv@b+2,f
  3831  07E8                     l689:	
  3832  07E8  0838               	movf	___fldiv@bexp,w
  3833  07E9  00A8               	movwf	??___fldiv
  3834  07EA  1003               	clrc
  3835  07EB  0C28               	rrf	??___fldiv,w
  3836  07EC  00A9               	movwf	??___fldiv+1
  3837  07ED  0829               	movf	??___fldiv+1,w
  3838  07EE  00A7               	movwf	___fldiv@b+3
  3839  07EF  0831               	movf	___fldiv@sign,w
  3840  07F0  00A8               	movwf	??___fldiv
  3841  07F1  0828               	movf	??___fldiv,w
  3842  07F2  04A7               	iorwf	___fldiv@b+3,f
  3843  07F3  2E90               	goto	l1642
  3844  07F4                     l667:	
  3845  07F4  0008               	return
  3846  07F5                     __end_of___fldiv:	
  3847                           
  3848                           	psect	text18
  3849  015E                     __ptext18:	
  3850 ;; *************** function _ADC_Start *****************
  3851 ;; Defined at:
  3852 ;;		line 10 in file "adc_pic16.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  channel         1    wreg     unsigned char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  channel         1    2[COMMON] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1
  3866 ;;      Params:         0       0       0
  3867 ;;      Locals:         1       0       0
  3868 ;;      Temps:          2       0       0
  3869 ;;      Totals:         3       0       0
  3870 ;;Total ram usage:        3 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function _ADC_Start
  3881  015E                     _ADC_Start:	
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in _ADC_Start: [wreg+status,2+status,0]
  3885                           ;ADC_Start@channel stored from wreg
  3886  015E  00F2               	movwf	ADC_Start@channel
  3887  015F                     l1550:	
  3888                           
  3889                           ;adc_pic16.c: 10: void ADC_Start(unsigned char channel );adc_pic16.c: 11: {;adc_pic16.c:
      +                           12:     if(channel > 7) return;
  3890  015F  3008               	movlw	8
  3891  0160  0272               	subwf	ADC_Start@channel,w
  3892  0161  1C03               	skipc
  3893  0162  2964               	goto	u1161
  3894  0163  2965               	goto	u1160
  3895  0164                     u1161:	
  3896  0164  2966               	goto	l1554
  3897  0165                     u1160:	
  3898  0165  2981               	goto	l230
  3899  0166                     l1554:	
  3900                           
  3901                           ;adc_pic16.c: 14:     ADCON0 = 0b10000001;
  3902  0166  3081               	movlw	129
  3903  0167  1283               	bcf	3,5	;RP0=0, select bank0
  3904  0168  009F               	movwf	31	;volatile
  3905  0169                     l1556:	
  3906                           
  3907                           ;adc_pic16.c: 15:     ADCON0 |= channel<<2;
  3908  0169  0872               	movf	ADC_Start@channel,w	;volatile
  3909  016A  00F0               	movwf	??_ADC_Start
  3910  016B  3001               	movlw	1
  3911  016C                     u1175:	
  3912  016C  1003               	clrc
  3913  016D  0DF0               	rlf	??_ADC_Start,f
  3914  016E  3EFF               	addlw	-1
  3915  016F  1D03               	skipz
  3916  0170  296C               	goto	u1175
  3917  0171  1003               	clrc
  3918  0172  0D70               	rlf	??_ADC_Start,w
  3919  0173  00F1               	movwf	??_ADC_Start+1
  3920  0174  0871               	movf	??_ADC_Start+1,w
  3921  0175  049F               	iorwf	31,f	;volatile
  3922  0176                     l1558:	
  3923                           
  3924                           ;adc_pic16.c: 17:     _delay((unsigned long)((3)*(4000000/4000.0)));
  3925  0176  3004               	movlw	4
  3926  0177  00F1               	movwf	??_ADC_Start+1
  3927  0178  30E4               	movlw	228
  3928  0179  00F0               	movwf	??_ADC_Start
  3929  017A                     u2077:	
  3930  017A  0BF0               	decfsz	??_ADC_Start,f
  3931  017B  297A               	goto	u2077
  3932  017C  0BF1               	decfsz	??_ADC_Start+1,f
  3933  017D  297A               	goto	u2077
  3934  017E  0000               	nop
  3935  017F                     l1560:	
  3936                           
  3937                           ;adc_pic16.c: 18:     GO_nDONE = 1;
  3938  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3939  0180  149F               	bsf	31,1	;volatile
  3940  0181                     l230:	
  3941  0181  0008               	return
  3942  0182                     __end_of_ADC_Start:	
  3943                           
  3944                           	psect	text19
  3945  00C6                     __ptext19:	
  3946 ;; *************** function _ADC_Init *****************
  3947 ;; Defined at:
  3948 ;;		line 4 in file "adc_pic16.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1
  3962 ;;      Params:         0       0       0
  3963 ;;      Locals:         0       0       0
  3964 ;;      Temps:          0       0       0
  3965 ;;      Totals:         0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           
  3976                           ;psect for function _ADC_Init
  3977  00C6                     _ADC_Init:	
  3978  00C6                     l1514:	
  3979                           ;incstack = 0
  3980                           ; Regs used in _ADC_Init: [wreg]
  3981                           
  3982                           
  3983                           ;adc_pic16.c: 6:   ADCON0 = 0x10000001;
  3984  00C6  3001               	movlw	1
  3985  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  3986  00C8  009F               	movwf	31	;volatile
  3987                           
  3988                           ;adc_pic16.c: 7:   ADCON1 = 0b001;
  3989  00C9  3001               	movlw	1
  3990  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  3991  00CB  009F               	movwf	31	;volatile
  3992  00CC                     l226:	
  3993  00CC  0008               	return
  3994  00CD                     __end_of_ADC_Init:	
  3995  007E                     btemp	set	126	;btemp
  3996  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      55
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___xxtofl
    _get_temp_value->___awdiv
    _draw_to->_show_LED1
    _draw_to->_show_LED2
    _draw_to->_show_LED3
    _draw_temp->___bmul
    ___bmul->___awdiv
    _draw_needed_amount->_show_LED1
    _draw_needed_amount->_show_LED2
    _draw_needed_amount->_show_LED3
    _draw_minus->_show_LED1
    _draw_minus->_show_LED2
    _draw_minus->_show_LED3
    _draw_hot->_show_LED1
    _draw_hot->_show_LED2
    _draw_hot->_show_LED3
    _draw_add->_show_LED1
    _draw_add->_show_LED2
    _draw_add->_show_LED3
    _show_LED3->_convert_to_segment
    _show_LED2->_convert_to_segment
    _show_LED1->_convert_to_segment
    ___fltol->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___fldiv

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6178
                                             37 BANK0      4     4      0
                           _ADC_Init
                          _ADC_Start
                            ___fldiv
                            ___fltol
                           ___xxtofl
                           _draw_add
                           _draw_hot
                         _draw_minus
                 _draw_needed_amount
                          _draw_temp
                            _draw_to
                     _get_temp_value
                           _init_LED
                          _show_LED1
                          _show_LED2
                          _show_LED3
 ---------------------------------------------------------------------------------
 (1) _init_LED                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _get_temp_value                                       6     4      2    1478
                                              9 COMMON     2     0      2
                                              0 BANK0      4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _draw_to                                              0     0      0     132
                          _show_LED1
                          _show_LED2
                          _show_LED3
 ---------------------------------------------------------------------------------
 (1) _draw_temp                                            6     6      0    1798
                                              0 BANK0      6     6      0
                            ___awdiv
                             ___bmul
                          _show_LED1
                          _show_LED2
                          _show_LED3
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              9 COMMON     4     3      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _draw_needed_amount                                   1     1      0     154
                                              6 COMMON     1     1      0
                          _show_LED1
                          _show_LED2
                          _show_LED3
 ---------------------------------------------------------------------------------
 (1) _draw_minus                                           0     0      0     132
                          _show_LED1
                          _show_LED2
                          _show_LED3
 ---------------------------------------------------------------------------------
 (1) _draw_hot                                             0     0      0     132
                          _show_LED1
                          _show_LED2
                          _show_LED3
 ---------------------------------------------------------------------------------
 (1) _draw_add                                             0     0      0     132
                          _show_LED1
                          _show_LED2
                          _show_LED3
 ---------------------------------------------------------------------------------
 (1) _show_LED3                                            3     3      0      44
                                              3 COMMON     3     3      0
                 _convert_to_segment
 ---------------------------------------------------------------------------------
 (1) _show_LED2                                            3     3      0      44
                                              3 COMMON     3     3      0
                 _convert_to_segment
 ---------------------------------------------------------------------------------
 (1) _show_LED1                                            3     3      0      44
                                              3 COMMON     3     3      0
                 _convert_to_segment
 ---------------------------------------------------------------------------------
 (2) _convert_to_segment                                   3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Start                                            3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Start
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _draw_add
     _show_LED1
       _convert_to_segment
     _show_LED2
       _convert_to_segment
     _show_LED3
       _convert_to_segment
   _draw_hot
     _show_LED1
       _convert_to_segment
     _show_LED2
       _convert_to_segment
     _show_LED3
       _convert_to_segment
   _draw_minus
     _show_LED1
       _convert_to_segment
     _show_LED2
       _convert_to_segment
     _show_LED3
       _convert_to_segment
   _draw_needed_amount
     _show_LED1
       _convert_to_segment
     _show_LED2
       _convert_to_segment
     _show_LED3
       _convert_to_segment
   _draw_temp
     ___awdiv
     ___bmul
       ___awdiv (ARG)
     _show_LED1
       _convert_to_segment
     _show_LED2
       _convert_to_segment
     _show_LED3
       _convert_to_segment
   _draw_to
     _show_LED1
       _convert_to_segment
     _show_LED2
       _convert_to_segment
     _show_LED3
       _convert_to_segment
   _get_temp_value
     ___awdiv
   _init_LED
   _show_LED1
     _convert_to_segment
   _show_LED2
     _convert_to_segment
   _show_LED3
     _convert_to_segment

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK1               20      0       0       5        0.0%
BITBANK1            20      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      37       4       68.8%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45       8        0.0%
ABS                  0      0      45       6        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec  1 09:50:11 2019

               ___fldiv@aexp 0039                 ___fldiv@bexp 0038                            _i 004D  
                          _u 004F                 ___fldiv@sign 0031               ___bmul@product 007B  
                __CFG_CP$OFF 0000                           l65 01B6                           l91 050E  
                         l85 04F0                 ___awdiv@sign 0076           __size_of_ADC_Start 0024  
                         fsr 0004                          l100 0531                          l202 00DA  
                        l212 015D                          l230 0181                          l160 03C5  
                        l161 03CE                          l153 038F                          l226 00CC  
                        l170 041F                          l162 03D7                          l171 0428  
                        l163 03E0                          l155 0398                          l172 0431  
                        l164 03E9                          l156 03A1                          l165 03F2  
                        l157 03AA                          l173 047A                          l502 02D2  
                        l166 03FB                          l158 03B3                          l182 012B  
                        l342 0140                          l190 01F0                          l167 0404  
                        l159 03BC                          l512 02D2                          l168 040D  
                        l176 0109                          l169 0416                          l185 00D3  
                        l193 00F0                          l179 011A                          l196 00E1  
                        l509 02BD                          l199 00E8                          l469 0257  
                        l743 02F5                          l681 076A                          l665 0678  
                        l745 038C                          l667 07F4                          l756 0356  
                        l757 0362                          l749 033A                          l687 07D9  
                        l689 07E8                          _RA0 0028                          _RA1 0029  
                        _RA3 002B                          _RC0 0038                          _RA4 002C  
                        _RC1 0039                          _RA5 002D                          _RC2 003A  
                        _RC3 003B                          _RC4 003C                          _RC5 003D  
               __CFG_CPD$OFF 0000                          fsr0 0004                          indf 0000  
               ___fltol@exp1 0044                         l1404 038E                         l1420 0107  
                       l1414 00FA                         l1422 010B                         l1430 011C  
                       l1510 01A8                         l1600 0623                         l1408 043A  
                       l1416 00FC                         l1424 010D                         l1432 011E  
                       l1440 012E                         l1504 0189                         l1520 0159  
                       l1514 00C6                         l1610 0638                         l1602 0629  
                       l1418 00FE                         l1426 010F                         l1434 0120  
                       l1442 0132                         l1530 01B9                         l1506 0195  
                       l1522 015B                         l1700 074F                         l1620 0650  
                       l1612 0640                         l1604 062D                         l1428 0118  
                       l1436 0129                         l1460 01FD                         l1452 01F1  
                       l1444 0136                         l1540 01EC                         l1532 01CA  
                       l1508 019B                         l1524 015C                         l1516 0141  
                       l1550 015F                         l1710 0774                         l1702 0753  
                       l1630 0665                         l1622 0656                         l1614 0641  
                       l1606 062E                         l1470 0212                         l1462 0201  
                       l1454 01F2                         l1446 0138                         l1438 012D  
                       l1542 01EE                         l1534 01CF                         l1526 00E2  
                       l1518 014C                         l1560 017F                         l1720 07B2  
                       l1712 0782                         l1704 0767                         l1640 068C  
                       l1632 066D                         l1624 065A                         l1608 0633  
                       l1616 0643                         l1528 00D4                         l1544 00DB  
                       l1480 0235                         l1472 0215                         l1464 0206  
                       l1456 01F6                         l1448 013F                         l1536 01D2  
                       l1800 0495                         l1554 0166                         l1730 07DE  
                       l1722 07BF                         l1714 0786                         l1642 0690  
                       l1634 066E                         l1626 065B                         l1618 064B  
                       l1570 0282                         l1562 0258                         l1546 00CD  
                       l1490 024E                         l1482 023B                         l1474 021C  
                       l1466 020A                         l1458 01FB                         l1538 01D4  
                       l1810 04BF                         l1802 049B                         l1556 0169  
                       l1732 07E2                         l1724 07CD                         l1716 079F  
                       l1708 076F                         l1660 06D1                         l1652 06A7  
                       l1628 0660                         l1636 0670                         l1572 0283  
                       l1564 0264                         l1740 02D4                         l1548 00EA  
                       l1492 0253                         l1484 023C                         l1476 0220  
                       l1468 020C                         l1900 05DA                         l1820 04D4  
                       l1812 04C1                         l1804 04A2                         l1558 0176  
                       l1734 07E4                         l1726 07D0                         l1718 07A5  
                       l1670 06EF                         l1662 06D3                         l1654 06B9  
                       l1638 0680                         l1646 0699                         l1574 028B  
                       l1742 02D9                         l1486 0243                         l1478 0224  
                       l1910 05F0                         l1902 05DC                         l1830 04F4  
                       l1822 04D7                         l1806 04AF                         l1814 04C5  
                       l1728 07D8                         l1664 06D8                         l1672 06F8  
                       l1680 071D                         l1656 06C1                         l1648 069E  
                       l1592 02B2                         l1584 0299                         l1576 028D  
                       l1568 026D                         l1760 0323                         l1752 0306  
                       l1744 02DD                         l1488 0249                         l1496 0182  
                       l1912 05F4                         l1904 05E4                         l1840 0512  
                       l1824 04D9                         l1816 04CB                         l1808 04B1  
                       l1690 073A                         l1682 0723                         l1674 070A  
                       l1666 06EA                         l1658 06C9                         l1594 02C2  
                       l1578 0291                         l1586 02AB                         l1770 035A  
                       l1762 0331                         l1754 030B                         l1746 02ED  
                       l1498 0187                         l1914 05FA                         l1906 05E8  
                       l1930 0605                         l1850 0525                         l1826 04E6  
                       l1834 04F7                         l1818 04D0                         l1692 073B  
                       l1684 072B                         l1676 070B                         l1668 06EE  
                       l1596 02C7                         l1780 0384                         l1772 0364  
                       l1764 0341                         l1756 0318                         l1748 02FD  
                       l1932 060B                         l1924 05FC                         l1908 05EA  
                       l1852 0528                         l1836 0505                         l1844 0515  
                       l1828 04ED                         l1860 0538                         l1694 0744  
                       l1686 072D                         l1678 0719                         l1598 061D  
                       l1774 037A                         l1766 034C                         l1758 031F  
                       l1934 0618                         l1926 0602                         l1862 053E  
                       l1854 052E                         l1846 051C                         l1838 050C  
                       l1870 0558                         l1790 0486                         l1688 0736  
                       l1696 074A                         l1776 037F                         l1768 0350  
                       l1928 0603                         l1880 057E                         l1872 0566  
                       l1864 054B                         l1856 0535                         l1848 051F  
                       l1792 0487                         l1784 047B                         l1698 074E  
                       l1778 0383                         l1890 058D                         l1882 0580  
                       l1874 0570                         l1866 0552                         l1786 0484  
                       l1892 0592                         l1884 0582                         l1876 0573  
                       l1868 0556                         l1796 0489                         l1788 0485  
                       l1894 05CA                         l1878 0579                         l1886 0588  
                       l1798 0491                         l1976 0442                         l1896 05D0  
                       l1898 05D4                         u1100 0235                         u1020 0132  
                       u1101 0234                         u1021 0131                         u1030 013F  
                       u1031 013E                         u1200 0291                         u1120 0249  
                       u1040 01F6                         u2000 0618                         u1201 0290  
                       u1121 0248                         u1105 0231                         u1041 01F5  
                       u2001 0617                         u1210 0298                         u1130 024E  
                       u1050 0201                         u1211 0297                         u1131 024D  
                       u1115 023D                         u1051 0200                         u1300 0638  
                       u1060 0212                         u1140 01A8                         u1301 0637  
                       u1061 0211                         u1141 01A7                         u2005 0614  
                       u1310 065A                         u1230 02AA                         u1150 01CF  
                       u1311 0659                         u1231 02A9                         u1151 01CE  
                       u1160 0165                         u1320 0660                         u1240 02B1  
                       u1080 0224                         u1161 0164                         u1321 065F  
                       u1241 02B0                         u1225 029A                         u1081 0223  
                       u1145 01A4                         u1410 070A                         u1330 0665  
                       u1411 0709                         u1331 0664                         u1075 0216  
                       u1500 076E                         u1420 0723                         u1340 0680  
                       u1260 02C2                         u1180 0264                         u1501 076D  
                       u1421 0722                         u1405 06F1                         u1341 067F  
                       u1261 02C1                         u1181 0263                         u2037 0152  
                       u1510 0774                         u1430 072B                         u1350 069E  
                       u1270 02C7                         u1190 027B                         u1175 016C  
                       u1511 0773                         u1431 072A                         u1415 0706  
                       u1351 069D                         u1271 02C6                         u1255 02B4  
                       u2047 0124                         u1095 0225                         u1520 0786  
                       u1360 06D8                         u1280 062D                         u1521 0785  
                       u1361 06D7                         u1281 062C                         u2057 0113  
                       u1530 0795                         u1450 073A                         u1290 0633  
                       u1610 031E                         u1451 0739                         u1291 0632  
                       u1195 0276                         u1611 031D                         u2067 0102  
                       u1540 07B2                         u1700 0383                         u2077 017A  
                       u1541 07B1                         u1445 072F                         u1701 0382  
                       u1605 0310                         u1550 07CD                         u1470 074E  
                       u1390 06EE                         u1630 0340                         u1710 049B  
                       u1551 07CC                         u1535 0790                         u1471 074D  
                       u1391 06ED                         u1375 06DA                         u1631 033F  
                       u1711 049A                         u1560 07E2                         u1480 0753  
                       u1800 04F4                         u1720 04A2                         u1561 07E1  
                       u1545 07AE                         u1481 0752                         u1465 073D  
                       u1385 06E3                         u1625 0332                         u1801 04F3  
                       u1721 04A1                         u1490 0767                         u1650 0350  
                       u1570 02D9                         u1810 0505                         u1730 04AF  
                       u1555 07C9                         u1491 0766                         u1651 034F  
                       u1571 02D8                         u1811 0504                         u1731 04AE  
                       u1660 0356                         u1580 02DD                         u1900 0566  
                       u1820 050C                         u1740 04BF                         u1661 0355  
                       u1645 0345                         u1581 02DC                         u1901 0565  
                       u1821 050B                         u1741 04BE                         u1670 035A  
                       u1590 02FD                         u1910 0579                         u1830 0512  
                       u1750 04CB                         u1671 0359                         u1591 02FC  
                       u1911 0578                         u1831 0511                         u1815 0501  
                       u1751 04CA                         u1735 04AB              ?_get_temp_value 0079  
                       u1680 036F                         u1920 057E                         u1840 051C  
                       u1760 04D0                         u1921 057D                         u1905 0562  
                       u1841 051B                         u1761 04CF                         u1745 04BB  
                       u1690 037F                         u1930 058C                         u1850 0525  
                       u1770 04D4                         u1691 037E                         u1931 058B  
                       u1851 0524                         u1771 04D3                         u1940 0592  
                       u1860 052E                         u1780 04E6                         u1685 036A  
                       u1941 0591                         u1861 052D                         u1781 04E5  
                       u1950 05D0                         u1870 0535                         u1790 04ED  
                       u1951 05CF                         u1871 0534                         u1791 04EC  
                       u1960 05DA                         u1880 053E                         u1961 05D9  
                       u1881 053D                         u1785 04E2                         u1970 05F0  
                       u1890 054B                         u1971 05EF                         u1891 054A  
                       u1980 05FA                         u1981 05F9                         u1990 0602  
                       u1991 0601                         u1895 0547               _change_counter 0051  
                       _main 047B                         _temp 0049                         btemp 007E  
           __end_of_ADC_Init 00CD                         start 0000                __CFG_IESO$OFF 0000  
            ___fldiv@new_exp 0032            ___bmul@multiplier 007C                ___fltol@sign1 0043  
                      ?_main 0070              __end_of___fldiv 07F5              __end_of___awdiv 0258  
              __CFG_WDTE$OFF 0000              __end_of___fltol 02D3                        _ANSEL 0091  
            ___awdiv@divisor 0070              ___awdiv@counter 0075                        _TRISA 0085  
                      _TRISC 0087               __CFG_FCMEN$OFF 0000              __end_of_draw_to 00E9  
                      _value 0054                        main@i 0048               __CFG_BOREN$OFF 0000  
          __end_of_ADC_Start 0182                        status 0003                        wtemp0 007E  
             __CFG_MCLRE$OFF 0000              __initialization 07F5                 __end_of_main 061D  
__size_of_draw_needed_amount 0008                       ??_main 0045                       _ADCON0 001F  
                     _ADCON1 009F                       _ADRESH 001E                       _ADRESL 009E  
           ___awdiv@dividend 0072                       _CMCON0 0019  __size_of_convert_to_segment 00EE  
           __end_of___xxtofl 038D               __CFG_PWRTE$OFF 0000             __end_of_draw_add 00D4  
                     ___bmul 012C             __end_of_draw_hot 00DB                    ??___fldiv 0028  
                  ??___awdiv 0074                    ??___fltol 003E             __end_of_init_LED 015E  
       get_temp_value@result 0020             ___awdiv@quotient 0077                    ??_draw_to 0076  
                  ?_ADC_Init 0070                 ___xxtofl@arg 007A                 ___xxtofl@exp 0079  
               ___xxtofl@val 0070      __end_of__initialization 07FE             ADC_Start@channel 0072  
                 ___fltol@f1 003A          ___bmul@multiplicand 0079               __pcstackCOMMON 0070  
               __pidataBANK0 00C4                   ??_ADC_Init 0070             ??_get_temp_value 007B  
         __size_of_draw_temp 003A                   __pbssBANK0 0049                   __pmaintext 047B  
                    ?___bmul 0079          draw_needed_amount@i 0076           __size_of_show_LED1 0011  
         __size_of_show_LED2 0011           __size_of_show_LED3 0011                    ?___xxtofl 0070  
                 _draw_minus 00DB                    ?_draw_add 0070                    ?_draw_hot 0070  
                  ?_init_LED 0070                    _ADC_Start 015E              __size_of___bmul 0015  
                    ___fldiv 061D                      ___awdiv 01F1                      ___fltol 0258  
          __end_of_draw_temp 01F1                      __ptext1 0141                      __ptext2 0182  
                    __ptext3 00E2                      __ptext4 01B7                      __ptext5 012C  
                    __ptext6 01F1                      __ptext7 00E9                      __ptext8 00DB  
                    __ptext9 00D4                      _draw_to 00E2                      _counter 004B  
                 ??___xxtofl 0074                      clrloop0 00F2                   ??_draw_add 0076  
                 ??_draw_hot 0076         end_of_initialization 07FE                   ??_init_LED 0070  
          __end_of_show_LED1 010A            __end_of_show_LED2 011B            __end_of_show_LED3 012C  
                 ?_ADC_Start 0070                   _temp_index 0053   __end_of_draw_needed_amount 00F1  
              ___xxtofl@sign 0078                  ___fldiv@grs 0034                  ___fldiv@rem 002D  
 __end_of_convert_to_segment 047B            __size_of_ADC_Init 0007                  ?_draw_minus 0070  
              _messured_temp 0056                   draw_temp@d 0025                   draw_temp@i 0024  
             __end_of___bmul 0141          start_initialization 07F5                  ??_ADC_Start 0070  
                   ??___bmul 007A      convert_to_segment@value 0072                  __pdataBANK0 0055  
        __size_of_draw_minus 0007                    ___fldiv@a 0020                    ___fldiv@b 0024  
                  ___latbits 0000                __pcstackBANK0 0020            __size_of___xxtofl 00BA  
          __size_of_draw_add 0007            __size_of_draw_hot 0007            __size_of_init_LED 001D  
                   ?___fldiv 0020                     ?___awdiv 0070                     ?___fltol 003A  
                  _draw_temp 01B7                     ?_draw_to 0070                     _ADC_Init 00C6  
    __size_of_get_temp_value 0035                    clear_ram0 00F1                   show_LED1@c 0075  
                 show_LED2@c 0075                   show_LED3@c 0075                     _GO_nDONE 00F9  
                  _show_LED1 00F9                    _show_LED2 010A                    _show_LED3 011B  
                 ?_draw_temp 0070              get_temp_value@i 0022           _draw_needed_amount 00E9  
               ??_draw_minus 0076                _temp_going_up 0052          ?_draw_needed_amount 0070  
         _convert_to_segment 038D                   ?_show_LED1 0070                   ?_show_LED2 0070  
                 ?_show_LED3 0070             __size_of___fldiv 01D8             __size_of___awdiv 0067  
           __size_of___fltol 007B          ?_convert_to_segment 0070         ??_draw_needed_amount 0076  
         __end_of_draw_minus 00E2             __size_of_draw_to 0007                     ___xxtofl 02D3  
                   __ptext10 00CD                     __ptext11 011B                     __ptext12 010A  
                   __ptext13 00F9                     __ptext14 038D                     __ptext15 02D3  
                   __ptext16 0258                     __ptext17 061D                     __ptext18 015E  
                   __ptext19 00C6                     _draw_add 00CD                     _draw_hot 00D4  
       ??_convert_to_segment 0070                     _init_LED 0141             _already_messured 0055  
              __size_of_main 01A2                  ??_draw_temp 0020               _get_temp_value 0182  
                ??_show_LED1 0073                  ??_show_LED2 0073                  ??_show_LED3 0073  
         __CFG_FOSC$INTOSCIO 0000       __end_of_get_temp_value 01B7  
