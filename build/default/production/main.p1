Version 4.0 HI-TECH Software Intermediate Code
[p mainexit ]
"1542 /opt/microchip/xc8/v2.10/pic/include/pic16f684.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1542: extern volatile unsigned char ANSEL __attribute__((address(0x091)));
[v _ANSEL `Vuc ~T0 @X0 0 e@145 ]
"925
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 925: extern volatile unsigned char CMCON0 __attribute__((address(0x019)));
[v _CMCON0 `Vuc ~T0 @X0 0 e@25 ]
"1188
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1188: extern volatile unsigned char TRISA __attribute__((address(0x085)));
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1238
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1238: extern volatile unsigned char TRISC __attribute__((address(0x087)));
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"13 ./adc_pic16.h
[; ;./adc_pic16.h: 13: void ADC_Init(void);
[v _ADC_Init `(v ~T0 @X0 0 ef ]
"49 ./7-segment-x-3.h
[; ;./7-segment-x-3.h: 49: void init_LED(void);
[v _init_LED `(v ~T0 @X0 0 ef ]
"51
[; ;./7-segment-x-3.h: 51: void draw_to(void);
[v _draw_to `(v ~T0 @X0 0 ef ]
"52
[; ;./7-segment-x-3.h: 52: void draw_hot(void);
[v _draw_hot `(v ~T0 @X0 0 ef ]
"47
[; ;./7-segment-x-3.h: 47: void draw_temp(char);
[v _draw_temp `(v ~T0 @X0 0 ef1`uc ]
"2441 /opt/microchip/xc8/v2.10/pic/include/pic16f684.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2441: extern volatile __bit RA3 __attribute__((address(0x2B)));
[v _RA3 `Vb ~T0 @X0 0 e@43 ]
"46 ./7-segment-x-3.h
[; ;./7-segment-x-3.h: 46: void draw_minus(void);
[v _draw_minus `(v ~T0 @X0 0 ef ]
"45
[; ;./7-segment-x-3.h: 45: void draw_add(void);
[v _draw_add `(v ~T0 @X0 0 ef ]
"48
[; ;./7-segment-x-3.h: 48: void draw_needed_amount(char);
[v _draw_needed_amount `(v ~T0 @X0 0 ef1`uc ]
"41
[; ;./7-segment-x-3.h: 41: void show_LED1(char);
[v _show_LED1 `(v ~T0 @X0 0 ef1`uc ]
"42
[; ;./7-segment-x-3.h: 42: void show_LED2(char);
[v _show_LED2 `(v ~T0 @X0 0 ef1`uc ]
"43
[; ;./7-segment-x-3.h: 43: void show_LED3(char);
[v _show_LED3 `(v ~T0 @X0 0 ef1`uc ]
"14 ./adc_pic16.h
[; ;./adc_pic16.h: 14: void ADC_Start(unsigned char);
[v _ADC_Start `(v ~T0 @X0 0 ef1`uc ]
"2300 /opt/microchip/xc8/v2.10/pic/include/pic16f684.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2300: extern volatile __bit GO_nDONE __attribute__((address(0xF9)));
[v _GO_nDONE `Vb ~T0 @X0 0 e@249 ]
"1021
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1021: extern volatile unsigned char ADRESH __attribute__((address(0x01E)));
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"2089
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2089: extern volatile unsigned char ADRESL __attribute__((address(0x09E)));
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
"54 /opt/microchip/xc8/v2.10/pic/include/pic16f684.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 218: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"268
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 268: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"288
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 288: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"366
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 366: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"449
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 449: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"456
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 456: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"463
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 463: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"470
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 470: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"541
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 541: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"548
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 548: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"619
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 619: __asm("CCPR1 equ 013h");
[; <" CCPR1 equ 013h ;# ">
"626
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 626: __asm("CCPR1L equ 013h");
[; <" CCPR1L equ 013h ;# ">
"633
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 633: __asm("CCPR1H equ 014h");
[; <" CCPR1H equ 014h ;# ">
"640
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 640: __asm("CCP1CON equ 015h");
[; <" CCP1CON equ 015h ;# ">
"722
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 722: __asm("PWM1CON equ 016h");
[; <" PWM1CON equ 016h ;# ">
"792
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 792: __asm("ECCPAS equ 017h");
[; <" ECCPAS equ 017h ;# ">
"874
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 874: __asm("WDTCON equ 018h");
[; <" WDTCON equ 018h ;# ">
"927
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 927: __asm("CMCON0 equ 019h");
[; <" CMCON0 equ 019h ;# ">
"997
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 997: __asm("CMCON1 equ 01Ah");
[; <" CMCON1 equ 01Ah ;# ">
"1023
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1023: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1030
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1030: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1120
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1120: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1190
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1190: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1240
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1240: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1290
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1290: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1373
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1373: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1427
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1427: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1492
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1492: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1544
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1544: __asm("ANSEL equ 091h");
[; <" ANSEL equ 091h ;# ">
"1606
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1606: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1613
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1613: __asm("WPUA equ 095h");
[; <" WPUA equ 095h ;# ">
"1618
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1618: __asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
"1767
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1767: __asm("IOCA equ 096h");
[; <" IOCA equ 096h ;# ">
"1772
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1772: __asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
"1941
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 1941: __asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
"2001
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2001: __asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
"2006
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2006: __asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
"2039
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2039: __asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
"2046
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2046: __asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
"2084
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2084: __asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
"2091
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2091: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2098
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f684.h: 2098: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"14 main.c
[p x FOSC = INTOSCIO ]
"15
[p x WDTE = OFF ]
"16
[p x PWRTE = OFF ]
"17
[p x MCLRE = OFF ]
"18
[p x CP = OFF ]
"19
[p x CPD = OFF ]
"20
[p x BOREN = OFF ]
"21
[p x IESO = OFF ]
"22
[p x FCMEN = OFF ]
"38
[; ;main.c: 38: unsigned int u;
[v _u `ui ~T0 @X0 1 e ]
"39
[; ;main.c: 39: int i = 0;
[v _i `i ~T0 @X0 1 e ]
[i _i
-> 0 `i
]
"40
[; ;main.c: 40: char value = 0;
[v _value `uc ~T0 @X0 1 e ]
[i _value
-> -> 0 `i `uc
]
"41
[; ;main.c: 41: int counter = 0;
[v _counter `i ~T0 @X0 1 e ]
[i _counter
-> 0 `i
]
"43
[; ;main.c: 43: char temp[2];
[v _temp `uc ~T0 @X0 -> 2 `i e ]
"44
[; ;main.c: 44: char temp_index = 0;
[v _temp_index `uc ~T0 @X0 1 e ]
[i _temp_index
-> -> 0 `i `uc
]
"45
[; ;main.c: 45: char messured_temp = 68;
[v _messured_temp `uc ~T0 @X0 1 e ]
[i _messured_temp
-> -> 68 `i `uc
]
"46
[; ;main.c: 46: char already_messured = 1;
[v _already_messured `uc ~T0 @X0 1 e ]
[i _already_messured
-> -> 1 `i `uc
]
"47
[; ;main.c: 47: char temp_going_up = 0;
[v _temp_going_up `uc ~T0 @X0 1 e ]
[i _temp_going_up
-> -> 0 `i `uc
]
"48
[; ;main.c: 48: char change_counter = 0;
[v _change_counter `uc ~T0 @X0 1 e ]
[i _change_counter
-> -> 0 `i `uc
]
"50
[; ;main.c: 50: int get_temp_value(){
[v _get_temp_value `(i ~T0 @X0 1 ef ]
{
[e :U _get_temp_value ]
[f ]
"51
[; ;main.c: 51:     int result = 2/2;
[v _result `i ~T0 @X0 1 a ]
[e = _result / -> 2 `i -> 2 `i ]
"52
[; ;main.c: 52:     for (int i=0; i<2; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 2 `i 91  ]
[e $U 92  ]
[e :U 91 ]
{
"53
[; ;main.c: 53:         result = result + temp[i];
[e = _result + _result -> *U + &U _temp * -> -> _i `ui `ux -> -> # *U &U _temp `ui `ux `i ]
"54
[; ;main.c: 54:     };
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 2 `i 91  ]
[e :U 92 ]
}
"55
[; ;main.c: 55:     return result/2;
[e ) / _result -> 2 `i ]
[e $UE 90  ]
"56
[; ;main.c: 56: };
[e :UE 90 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"59
[; ;main.c: 59: void main(void) {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"61
[; ;main.c: 61:     ANSEL = 0b00000100;
[e = _ANSEL -> -> 4 `i `uc ]
"62
[; ;main.c: 62:     CMCON0 = 0x07;
[e = _CMCON0 -> -> 7 `i `uc ]
"64
[; ;main.c: 64:     TRISA = 0b00001100;
[e = _TRISA -> -> 12 `i `uc ]
"65
[; ;main.c: 65:     TRISC = 0b00000000;
[e = _TRISC -> -> 0 `i `uc ]
"67
[; ;main.c: 67:     ADC_Init();
[e ( _ADC_Init ..  ]
"69
[; ;main.c: 69:     init_LED();
[e ( _init_LED ..  ]
"72
[; ;main.c: 72:     for (char i=0; i<2; i++) {
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 95  ]
[e $U 96  ]
[e :U 95 ]
{
"73
[; ;main.c: 73:         temp[i] = 68 + 5;
[e = *U + &U _temp * -> _i `ux -> -> # *U &U _temp `ui `ux -> + -> 68 `i -> 5 `i `uc ]
"74
[; ;main.c: 74:     };
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 95  ]
[e :U 96 ]
}
"77
[; ;main.c: 77:     while(1){
[e :U 99 ]
{
"80
[; ;main.c: 80:         if (value > 82) {
[e $ ! > -> _value `i -> 82 `i 101  ]
{
"81
[; ;main.c: 81:             if (counter<(250/3)) {
[e $ ! < _counter / -> 250 `i -> 3 `i 102  ]
{
"82
[; ;main.c: 82:                draw_to();
[e ( _draw_to ..  ]
"84
[; ;main.c: 84:             } else if (counter<(250/3*2)) {
}
[e $U 103  ]
[e :U 102 ]
[e $ ! < _counter * / -> 250 `i -> 3 `i -> 2 `i 104  ]
{
"85
[; ;main.c: 85:                draw_hot();
[e ( _draw_hot ..  ]
"87
[; ;main.c: 87:             } else {
}
[e $U 105  ]
[e :U 104 ]
{
"88
[; ;main.c: 88:                draw_temp(messured_temp);
[e ( _draw_temp (1 _messured_temp ]
"89
[; ;main.c: 89:             };
}
[e :U 105 ]
[e :U 103 ]
"90
[; ;main.c: 90:         } else if (value > 36) {
}
[e $U 106  ]
[e :U 101 ]
[e $ ! > -> _value `i -> 36 `i 107  ]
{
"91
[; ;main.c: 91:             if (temp_going_up==1) {
[e $ ! == -> _temp_going_up `i -> 1 `i 108  ]
{
"92
[; ;main.c: 92:                 if (RA3==1) {
[e $ ! == -> _RA3 `i -> 1 `i 109  ]
{
"93
[; ;main.c: 93:                     draw_temp(messured_temp);
[e ( _draw_temp (1 _messured_temp ]
"94
[; ;main.c: 94:                 } else {
}
[e $U 110  ]
[e :U 109 ]
{
"95
[; ;main.c: 95:                     draw_minus();
[e ( _draw_minus ..  ]
"96
[; ;main.c: 96:                 };
}
[e :U 110 ]
"97
[; ;main.c: 97:             } else {
}
[e $U 111  ]
[e :U 108 ]
{
"98
[; ;main.c: 98:                 if (counter<(250/3)) {
[e $ ! < _counter / -> 250 `i -> 3 `i 112  ]
{
"99
[; ;main.c: 99:                     if (value < 68) {
[e $ ! < -> _value `i -> 68 `i 113  ]
{
"100
[; ;main.c: 100:                         draw_temp(messured_temp);
[e ( _draw_temp (1 _messured_temp ]
"102
[; ;main.c: 102:                     } else {
}
[e $U 114  ]
[e :U 113 ]
{
"103
[; ;main.c: 103:                         if (RA3==1) {
[e $ ! == -> _RA3 `i -> 1 `i 115  ]
{
"104
[; ;main.c: 104:                             draw_temp(messured_temp);
[e ( _draw_temp (1 _messured_temp ]
"105
[; ;main.c: 105:                         } else {
}
[e $U 116  ]
[e :U 115 ]
{
"106
[; ;main.c: 106:                             draw_minus();
[e ( _draw_minus ..  ]
"107
[; ;main.c: 107:                         };
}
[e :U 116 ]
"108
[; ;main.c: 108:                     };
}
[e :U 114 ]
"109
[; ;main.c: 109:                 } else if(counter<(250/3*2)) {
}
[e $U 117  ]
[e :U 112 ]
[e $ ! < _counter * / -> 250 `i -> 3 `i -> 2 `i 118  ]
{
"110
[; ;main.c: 110:                     if (value < 68){
[e $ ! < -> _value `i -> 68 `i 119  ]
{
"111
[; ;main.c: 111:                         draw_add();
[e ( _draw_add ..  ]
"112
[; ;main.c: 112:                     } else {
}
[e $U 120  ]
[e :U 119 ]
{
"113
[; ;main.c: 113:                         if (RA3==1) {
[e $ ! == -> _RA3 `i -> 1 `i 121  ]
{
"114
[; ;main.c: 114:                             draw_temp(messured_temp);
[e ( _draw_temp (1 _messured_temp ]
"115
[; ;main.c: 115:                         } else {
}
[e $U 122  ]
[e :U 121 ]
{
"116
[; ;main.c: 116:                             draw_minus();
[e ( _draw_minus ..  ]
"117
[; ;main.c: 117:                         };
}
[e :U 122 ]
"118
[; ;main.c: 118:                     };
}
[e :U 120 ]
"119
[; ;main.c: 119:                 } else {
}
[e $U 123  ]
[e :U 118 ]
{
"120
[; ;main.c: 120:                     if (value < 55) {
[e $ ! < -> _value `i -> 55 `i 124  ]
{
"121
[; ;main.c: 121:                         draw_needed_amount(3);
[e ( _draw_needed_amount (1 -> -> 3 `i `uc ]
"122
[; ;main.c: 122:                     } else if (value < 64 ) {
}
[e $U 125  ]
[e :U 124 ]
[e $ ! < -> _value `i -> 64 `i 126  ]
{
"123
[; ;main.c: 123:                         draw_needed_amount(2);
[e ( _draw_needed_amount (1 -> -> 2 `i `uc ]
"124
[; ;main.c: 124:                     } else if (value < 68 ) {
}
[e $U 127  ]
[e :U 126 ]
[e $ ! < -> _value `i -> 68 `i 128  ]
{
"125
[; ;main.c: 125:                         draw_needed_amount(1);
[e ( _draw_needed_amount (1 -> -> 1 `i `uc ]
"126
[; ;main.c: 126:                     } else {
}
[e $U 129  ]
[e :U 128 ]
{
"127
[; ;main.c: 127:                         if (RA3==1) {
[e $ ! == -> _RA3 `i -> 1 `i 130  ]
{
"128
[; ;main.c: 128:                             draw_temp(messured_temp);
[e ( _draw_temp (1 _messured_temp ]
"129
[; ;main.c: 129:                         } else {
}
[e $U 131  ]
[e :U 130 ]
{
"130
[; ;main.c: 130:                             draw_minus();
[e ( _draw_minus ..  ]
"131
[; ;main.c: 131:                         };
}
[e :U 131 ]
"132
[; ;main.c: 132:                     };
}
[e :U 129 ]
[e :U 127 ]
[e :U 125 ]
"133
[; ;main.c: 133:                 };
}
[e :U 123 ]
[e :U 117 ]
"134
[; ;main.c: 134:             };
}
[e :U 111 ]
"135
[; ;main.c: 135:         } else if (value < 10) {
}
[e $U 132  ]
[e :U 107 ]
[e $ ! < -> _value `i -> 10 `i 133  ]
{
"136
[; ;main.c: 136:             if (counter<(250/2)) {
[e $ ! < _counter / -> 250 `i -> 2 `i 134  ]
{
"137
[; ;main.c: 137:                 show_LED1(18);
[e ( _show_LED1 (1 -> -> 18 `i `uc ]
"138
[; ;main.c: 138:                 show_LED2(18);
[e ( _show_LED2 (1 -> -> 18 `i `uc ]
"139
[; ;main.c: 139:                 show_LED3(18);
[e ( _show_LED3 (1 -> -> 18 `i `uc ]
"140
[; ;main.c: 140:             } else {
}
[e $U 135  ]
[e :U 134 ]
{
"141
[; ;main.c: 141:                 draw_temp(messured_temp);
[e ( _draw_temp (1 _messured_temp ]
"142
[; ;main.c: 142:             };
}
[e :U 135 ]
"143
[; ;main.c: 143:         } else {
}
[e $U 136  ]
[e :U 133 ]
{
"144
[; ;main.c: 144:             draw_temp(messured_temp);
[e ( _draw_temp (1 _messured_temp ]
"145
[; ;main.c: 145:         };
}
[e :U 136 ]
[e :U 132 ]
[e :U 106 ]
"146
[; ;main.c: 146:         counter = (counter>250) ? 0:(counter + 1);
[e = _counter ? > _counter -> 250 `i : -> 0 `i + _counter -> 1 `i ]
"150
[; ;main.c: 150:         if ( i==0 && already_messured==1 ) {
[e $ ! && == _i -> 0 `i == -> _already_messured `i -> 1 `i 137  ]
{
"151
[; ;main.c: 151:             ADC_Start(2);
[e ( _ADC_Start (1 -> -> 2 `i `uc ]
"152
[; ;main.c: 152:             already_messured = 0;
[e = _already_messured -> -> 0 `i `uc ]
"153
[; ;main.c: 153:             value = (char)get_temp_value();
[e = _value -> ( _get_temp_value ..  `uc ]
"154
[; ;main.c: 154:         };
}
[e :U 137 ]
"156
[; ;main.c: 156:         if (GO_nDONE) {
[e $ ! _GO_nDONE 138  ]
{
"158
[; ;main.c: 158:         } else {
}
[e $U 139  ]
[e :U 138 ]
{
"159
[; ;main.c: 159:             if (already_messured == 0) {
[e $ ! == -> _already_messured `i -> 0 `i 140  ]
{
"161
[; ;main.c: 161:                 messured_temp = (char)(((ADRESH << 8) + ADRESL)/2.048);
[e = _messured_temp -> / -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `d .2.048 `uc ]
"163
[; ;main.c: 163:                 if (messured_temp > value) {
[e $ ! > -> _messured_temp `i -> _value `i 141  ]
{
"164
[; ;main.c: 164:                     change_counter++;
[e ++ _change_counter -> -> 1 `i `uc ]
"165
[; ;main.c: 165:                     if(change_counter > 3) {
[e $ ! > -> _change_counter `i -> 3 `i 142  ]
{
"166
[; ;main.c: 166:                         temp_going_up = 1;
[e = _temp_going_up -> -> 1 `i `uc ]
"167
[; ;main.c: 167:                         temp[temp_index] = messured_temp;
[e = *U + &U _temp * -> _temp_index `ux -> -> # *U &U _temp `ui `ux _messured_temp ]
"168
[; ;main.c: 168:                         temp_index++;
[e ++ _temp_index -> -> 1 `i `uc ]
"169
[; ;main.c: 169:                         change_counter=0;
[e = _change_counter -> -> 0 `i `uc ]
"170
[; ;main.c: 170:                     };
}
[e :U 142 ]
"171
[; ;main.c: 171:                 } else if(messured_temp < value ) {
}
[e $U 143  ]
[e :U 141 ]
[e $ ! < -> _messured_temp `i -> _value `i 144  ]
{
"172
[; ;main.c: 172:                     change_counter++;
[e ++ _change_counter -> -> 1 `i `uc ]
"173
[; ;main.c: 173:                     if(change_counter > 3) {
[e $ ! > -> _change_counter `i -> 3 `i 145  ]
{
"174
[; ;main.c: 174:                         temp_going_up = 0;
[e = _temp_going_up -> -> 0 `i `uc ]
"175
[; ;main.c: 175:                         temp[temp_index] = messured_temp;
[e = *U + &U _temp * -> _temp_index `ux -> -> # *U &U _temp `ui `ux _messured_temp ]
"176
[; ;main.c: 176:                         temp_index++;
[e ++ _temp_index -> -> 1 `i `uc ]
"177
[; ;main.c: 177:                         change_counter=0;
[e = _change_counter -> -> 0 `i `uc ]
"178
[; ;main.c: 178:                     };
}
[e :U 145 ]
"179
[; ;main.c: 179:                 } else {
}
[e $U 146  ]
[e :U 144 ]
{
"180
[; ;main.c: 180:                     change_counter=0;
[e = _change_counter -> -> 0 `i `uc ]
"181
[; ;main.c: 181:                 };
}
[e :U 146 ]
[e :U 143 ]
"182
[; ;main.c: 182:                 if (temp_index == 2) temp_index=0;
[e $ ! == -> _temp_index `i -> 2 `i 147  ]
[e = _temp_index -> -> 0 `i `uc ]
[e :U 147 ]
"184
[; ;main.c: 184:                 already_messured=1;
[e = _already_messured -> -> 1 `i `uc ]
"185
[; ;main.c: 185:             };
}
[e :U 140 ]
"186
[; ;main.c: 186:         };
}
[e :U 139 ]
"187
[; ;main.c: 187:         i++;
[e ++ _i -> 1 `i ]
"190
[; ;main.c: 190:         if ( i> 250 ) {
[e $ ! > _i -> 250 `i 148  ]
{
"191
[; ;main.c: 191:             i=0;
[e = _i -> 0 `i ]
"192
[; ;main.c: 192:         };
}
[e :U 148 ]
"193
[; ;main.c: 193:     };
}
[e :U 98 ]
[e $U 99  ]
[e :U 100 ]
"194
[; ;main.c: 194:     return;
[e $UE 94  ]
"195
[; ;main.c: 195: };
[e :UE 94 ]
}
